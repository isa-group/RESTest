openapi: 3.0.2
servers:
  - description: Vimeo.com
    url: https://api.vimeo.com
info:
  contact:
    url: https://developer.vimeo.com/help
    x-twitter: vimeo
  title: Vimeo
  version: "3.4"
  x-apisguru-categories:
    - entertainment
  x-logo:
    url: https://twitter.com/vimeo/profile_image?size=original
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: openapi
      url: https://raw.githubusercontent.com/vimeo/openapi/master/api.yaml
      version: "3.0"
  x-providerName: vimeo.com
security:
  - oauth2:
      - create
      - delete
      - edit
      - email
      - interact
      - private
      - promo_codes
      - public
      - purchase
      - purchased
      - stats
      - upload
      - video_files
tags:
  - name: API Information
  - name: Albums\Album videos
  - name: Albums\Custom album logos
  - name: Albums\Custom album thumbnails
  - name: Albums\Essentials
  - name: Authentication Extras\Essentials
  - name: Categories\Channels
  - name: Categories\Essentials
  - name: Categories\Groups
  - name: Categories\Subscriptions
  - name: Categories\Videos
  - name: Channels\Categories
  - name: Channels\Essentials
  - name: Channels\Moderators
  - name: Channels\Private channel members
  - name: Channels\Subscriptions and subscribers
  - name: Channels\Tags
  - name: Channels\Videos
  - name: Embed Presets\Custom Logos
  - name: Embed Presets\Essentials
  - name: Embed Presets\Videos
  - name: Groups\Essentials
  - name: Groups\Subscription
  - name: Groups\Users
  - name: Groups\Videos
  - name: Likes\Essentials
  - name: On Demand\Backgrounds
  - name: On Demand\Essentials
  - name: On Demand\Genres
  - name: On Demand\Posters
  - name: On Demand\Promotions
  - name: On Demand\Purchases and Rentals
  - name: On Demand\Regions
  - name: On Demand\Seasons
  - name: On Demand\Videos
  - name: Portfolios\Essentials
  - name: Portfolios\Videos
  - name: Projects\Essentials
  - name: Projects\Videos
  - name: Tags\Essentials
  - name: Users\Essentials
  - name: Users\Feed
  - name: Users\Follows
  - name: Users\Internal
  - name: Users\Pictures
  - name: Users\Watch History
  - name: Videos\Comments
  - name: Videos\Content Ratings
  - name: Videos\Creative Commons
  - name: Videos\Credits
  - name: Videos\Embed Privacy
  - name: Videos\Essentials
  - name: Videos\Languages
  - name: Videos\Recommendations
  - name: Videos\Tags
  - name: Videos\Text Tracks
  - name: Videos\Thumbnails
  - name: Videos\Upload
  - name: Videos\Versions
  - name: Videos\Viewing Privacy
  - name: Watch Later Queue\Essentials
paths:
  /videos:
    get:
      operationId: search_videos
      parameters:
        - description: The sort direction of the results.
          in: query
          name: direction
          required: false
          schema:
            enum:
              - asc
              - desc
            example: asc
            type: string
        - description: The attribute by which to filter the results. `CC` and related filters target videos with the corresponding Creative Commons licenses. For more information, see our [Creative Commons](https://vimeo.com/creativecommons) page.
          in: query
          name: filter
          required: false
          schema:
            enum:
              - CC
              - CC-BY
              - CC-BY-NC
              - CC-BY-NC-ND
              - CC-BY-NC-SA
              - CC-BY-ND
              - CC-BY-SA
              - CC0
              - categories
              - duration
              - in-progress
              - minimum_likes
              - trending
              - upload_date
            type: string
        - description: A comma-separated list of video URLs to find.
          in: query
          name: links
          required: false
          schema:
            example: https://vimeo.com/122375452,https://vimeo.com/273576296
#            type: string
            type: array
            items:
              type: string
        - description: The page number of the results to show.
          in: query
          name: page
          required: false
          schema:
            example: 1
            type: number
        - description: The number of items to show on each page of results, up to a maximum of 100.
          in: query
          name: per_page
          required: false
          schema:
            example: 10
            type: number
        - description: Search query.
          in: query
          name: query
#          required: true
          schema:
            example: staff picks
            type: string
        - description: The way to sort the results.
          in: query
          name: sort
          required: false
          schema:
            enum:
              - alphabetical
              - comments
              - date
              - duration
              - likes
              - plays
              - relevant
            type: string
        - description: The comma-separated list of videos to find.
          in: query
          name: uris
          required: false
          schema:
            example: /videos/122375452,/videos/273576296
#            type: string
            type: array
            items:
              type: string
      x-dependencies:
        - OnlyOne(query, links);
        - OnlyOne(query, uris);
        - ZeroOrOne(links, filter);
        - ZeroOrOne(links, sort);
        - ZeroOrOne(uris, filter);
        - ZeroOrOne(uris, sort);
      responses:
#        default: # Added
#          description: "Default" # Added
        "200":
          content:
            application/vnd.vimeo.video+json:
              schema:
                type: object # Added
                properties:
                  total: # Added
                    type: integer
                    nullable: true
                  page: # Added
                    type: integer
                    nullable: true
                  per_page: # Added
                    type: integer # Added
                    nullable: true
                  paging: # Added
                    type: object
                    properties: # Added
                      next: # Added
                        type: string
                        nullable: true
                      previous: # Added
                        type: string
                        nullable: true
                      first: # Added
                        type: string
                        nullable: true
                      last: # Added
                        type: string
                        nullable: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/video"
#                  type: array
          description: The search results were returned.
#        "400":
#          content:
#            application/vnd.vimeo.video+json:
#              schema:
#                $ref: "#/components/schemas/error"
#          description: |-
#            * Error code 2101: Either the `uris` or `links` parameter has filtering or sorting arguments.
#            * Error code 2204: There is a problem with the batch request.
#        "503":
#          content:
#            application/vnd.vimeo.video+json:
#              schema:
#                $ref: "#/components/schemas/legacy-error"
#          description: |-
#            * Search is disabled.
#            * Error code 7300: There was an internal search error.
      summary: Search for videos
      tags:
        - Videos\Essentials
components:
  schemas:
    activity-3-1:
      properties:
        category:
          allOf:
            - $ref: "#/components/schemas/category"
          description: The category that this event occurred for. This will be preset for only "category" activity types.
        channel:
          allOf:
            - $ref: "#/components/schemas/channel"
          description: The channel that this event occurred for. This will be present for only "channel" activity types.
        clip:
          allOf:
            - $ref: "#/components/schemas/video"
          description: Video associated with ths activity.
        group:
          allOf:
            - $ref: "#/components/schemas/group"
          description: The group that this event occurred for. This will be present for only "group" activity types.
        metadata:
          description: The activity's metadata.
          properties:
            connections:
              description: A list of resource URIs related to the activity.
              properties:
                related:
                  description: Related content for this activity.
                  nullable: true
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/activities?offset=20
                      type: string
                  required:
                    - options
                    - uri
                  type: object
              required:
                - related
              type: object
          required:
            - connections
          type: object
        tag:
          allOf:
            - $ref: "#/components/schemas/tag"
          description: The tag that this event occurred for. This will be present for only "tag" activity types.
        time:
          description: Time that the event occurred.
          example: 2017-05-17T17:46:09+00:00
          type: string
        type:
          description: Activity type
          enum:
            - appearance
            - category
            - channel
            - facebook_feed
            - group
            - like
            - ondemand
            - share
            - tag
            - twitter_timeline
            - upload
          example: appearance
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The user that this event occurred for. This will be present for "like", "appearance", and "share" activity types.
      required:
        - clip
        - metadata
        - time
        - type
      title: Activity 3.1
      type: object
    album:
      properties:
        allow_continuous_play:
          description: Whether an album should allow continuous play.
          example: "true"
          type: boolean
        allow_downloads:
          description: Whether an album should allow downloads.
          example: "true"
          type: boolean
        allow_share:
          description: Whether an album should allow sharing.
          example: "true"
          type: boolean
        brand_color:
          description: Hexadecimal color code for the decorative color. For example, album videos use this color for player buttons.
          example: ff66ee
          nullable: true
          type: string
        created_time:
          description: The time in ISO 8601 format that the album was created.
          example: 2015-12-17T21:32:44+00:00
          type: string
        custom_logo:
          allOf:
            - $ref: "#/components/schemas/picture"
          description: The custom logo for this album.
          nullable: true
        description:
          description: A brief description of the album's content.
          example: Vimeo holiday videos!
          nullable: true
          type: string
        domain:
          description: The custom domain a user has selected for their album.
          example: mycustomdomain.com
          nullable: true
          type: string
        duration:
          description: The total duration in seconds of all the videos in the album.
          example: 1163
          type: number
        embed:
          description: Embed data for the album.
          properties:
            html:
              description: The responsive HTML code to embed the playlist on a website. This is present only when `privacy.view` isn't password and when the album has embeddable videos.
              nullable: true
              type: string
          required:
            - html
          type: object
        embed_brand_color:
          description: Whether to show the album's custom brand color in the player of the album's embedded playlist.
          example: "true"
          nullable: true
          type: boolean
        embed_custom_logo:
          description: Whether to show the album's custom logo in the player of the album's embedded playlist.
          example: "true"
          nullable: true
          type: boolean
        hide_nav:
          description: Whether to hide the Vimeo navigation when viewing the album.
          example: "true"
          type: boolean
        hide_vimeo_logo:
          description: Whether to hide the Vimeo logo in the player of the album's embedded playlist.
          example: "true"
          nullable: true
          type: boolean
        layout:
          description: The album's layout preference
          enum:
            - grid
            - player
          example: grid
          type: string
        link:
          description: The URL to access the album.
          example: https://vimeo.com/album/Vimeo Holiday Videos!
          type: string
        metadata:
          description: Metadata about the album.
          properties:
            connections:
              description: A collection of information that is connected to this resource.
              properties:
                videos:
                  description: Information about the videos that belong to this album.
                  properties:
                    options:
                      description: An array of the HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 6
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /albums/3706071/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - videos
              type: object
            interactions:
              description: A list of resource URIs related to the album.
              nullable: true
              properties:
                add_custom_thumbnails:
                  description: An action indicating that the authenticated user is an admin of the album and may therefore add custom thumbnails. This data requires a bearer token with the `private` scope.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI. This data requires a bearer token with the `private` scope.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
                      example: /users/123456/albums/654321/custom_thumbnails
                      type: string
                  required:
                    - options
                    - uri
                  type: object
                add_logos:
                  description: An action indicating that the authenticated user is an admin of the album and may therefore add custom logos. This data requires a bearer token with the `private` scope.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI. This data requires a bearer token with the `private` scope.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
                      example: /users/123456/albums/654321/logos
                      type: string
                  required:
                    - options
                    - uri
                  type: object
                add_videos:
                  description: An action indicating that the authenticated user is an admin of the album and may therefore add videos. This data requires a bearer token with the `private` scope.
                  properties:
                    options:
                      description: An array of HTTP methods allowed on this URI. This data requires a bearer token with the `private` scope.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
                      example: /users/123456/albums/654321/videos
                      type: string
                  required:
                    - options
                    - uri
                  type: object
              required:
                - add_custom_thumbnails
                - add_logos
                - add_videos
              type: object
          required:
            - connections
            - interactions
          type: object
        modified_time:
          description: The time in ISO 8601 format when the album was last modified.
          example: 2018-02-06T21:24:17+00:00
          type: string
        name:
          description: The album's display name.
          example: Vimeo Holiday Videos!
          type: string
        pictures:
          allOf:
            - $ref: "#/components/schemas/picture"
          description: The active image for the album; defaults to the thumbnail of the last video added to the album.
        privacy:
          description: The privacy settings of the album.
          properties:
            password:
              description: The privacy-enabled password to see this album. Present only when `privacy.view` is `password`.
              example: hunter1
              type: string
            view:
              description: |
                Who can view the album:

                Option descriptions:
                 * `anybody` - Anyone can view the album.
                 * `embed_only` - Only owner can see album, can be embedded off-site
                 * `password` - Only those with the password can view the album.
              enum:
                - anybody
                - embed_only
                - password
              example: anybody
              type: string
          required:
            - view
          type: object
        resource_key:
          description: The album resource key.
          example: e5595241643259c658ed6c85ca82985a6341edc7
          type: string
        review_mode:
          description: Whether album videos should use the review mode URL.
          example: "true"
          type: boolean
        sort:
          description: Sort type of the album.
          enum:
            - added_first
            - added_last
            - alphabetical
            - arranged
            - comments
            - likes
            - newest
            - oldest
            - plays
          example: added_first
          type: string
        theme:
          description: The album's color theme preference
          enum:
            - dark
            - standard
          example: dark
          type: string
        uri:
          description: The album's URI.
          example: /albums/3706071
          type: string
        url:
          description: The custom Vimeo URL a user has selected for their album.
          example: my-custom-url
          nullable: true
          type: string
        use_custom_domain:
          description: Whether the user has opted in to use a custom domain for their album.
          example: "false"
          type: boolean
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The owner of the album.
        web_brand_color:
          description: Whether an album should show the brand color in the web layout.
          example: "true"
          type: boolean
        web_custom_logo:
          description: Whether an album's custom logo should be shown in the web layout.
          example: "true"
          type: boolean
      required:
        - allow_continuous_play
        - allow_downloads
        - allow_share
        - brand_color
        - created_time
        - custom_logo
        - description
        - domain
        - duration
        - embed
        - embed_brand_color
        - embed_custom_logo
        - hide_nav
        - hide_vimeo_logo
        - layout
        - link
        - metadata
        - modified_time
        - name
        - pictures
        - privacy
        - resource_key
        - review_mode
        - sort
        - theme
        - uri
        - url
        - use_custom_domain
        - user
        - web_brand_color
        - web_custom_logo
      title: Album
      type: object
    api-app:
      properties:
        name:
          description: The name of the API app.
          example: Vimeo Android
          type: string
        uri:
          description: The canonical URI of the API app.
          example: /apps/12345
          type: string
      required:
        - name
        - uri
      title: API App
      type: object
    auth:
      properties:
        access_token:
          description: The access token string.
          example: 01019a4a62aec63db077317ab7bb429db75652401e
          type: string
        app:
          allOf:
            - $ref: "#/components/schemas/api-app"
          description: The API application associated with the token.
        expires_on:
          description: The date and time that the token expires.
          example: "1495048954"
          type: string
        refresh_token:
          description: The refresh token string.
          example: 3d3bc8a9cb7debfd01b270e419b2d265983362f9
          type: string
        scope:
          description: The scope or scopes that the token supports.
          example: private create edit upload public
          type: string
        token_type:
          description: |
            The token type:

            Option descriptions:
             * `bearer` - The token is of the `bearer` type.
          enum:
            - bearer
          example: bearer
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The user associated with the token.
      required:
        - access_token
        - app
        - scope
        - token_type
      title: Auth
      type: object
    auth-error:
      properties:
        error:
          description: The name of the error.
          example: server_error
          type: string
        error_description:
          description: The description of the error.
          example: An error has occurred on Vimeo's servers. Please try again.
          type: string
      required:
        - error
        - error_description
      title: Auth Error
      type: object
    category:
      properties:
        is_deprecated: # added
          type: boolean
          nullable: true
        icon:
          $ref: "#/components/schemas/picture"
#          allOf:
#            - $ref: "#/components/schemas/picture"
          description: The active icon for the category.
        last_video_featured_time:
          description: The last time, in ISO 8601 format, that a video was featured.
          example: 2017-05-17T17:46:09+00:00
          type: string
          nullable: true
        link:
          description: The URL to access the category in a browser.
          example: https://vimeo.com/categories/animation
          type: string
        metadata:
          description: Metadata about the category.
          properties:
            connections:
              description: A collection of information that is connected to this resource.
              properties:
                channels:
                  description: Information about the channels related to this category.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of channels on this connection.
                      example: 90
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /categories/animation/channels
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
                groups:
                  description: Information about the groups related to this category.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of groups on this connection.
                      example: 15
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /categories/animation/groups
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
                users:
                  description: Information about the users related to this category.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of users on this connection.
                      example: 140
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /categories/animation/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
                videos:
                  description: Information about the videos related to this category.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 960
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /categories/animation/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - channels
                - groups
                - users
                - videos
              type: object
#            interactions:  # private_token
#              description: The permissible actions related to the category.
#              properties:
#                follow:
#                  description: An action indicating if the authenticated user has followed this category.
#                  properties:
#                    added:
#                      description: Whether the authenticated user has followed this category.
#                      example: "true"
#                      type: boolean
#                    added_time:
#                      description: The time in ISO 8601 format that the user followed this category, or the null value if the user hasn't followed this category.
#                      example: 2017-05-17T17:46:09+00:00
#                      nullable: true
#                      type: string
#                    uri:
#                      description: "The URI for following or unfollowing this category: PUT to this URI to follow the category, or DELETE to this URI to unfollow the category."
#                      example: /users/152184/categories/animation
#                      type: string
#                  required:
#                    - added
#                    - added_time
#                    - uri
#                  type: object
#              required:
#                - follow
#              type: object
          required:
            - connections
#            - interactions
          type: object
        name:
          description: The display name that identifies the category.
          example: Animation
          type: string
        parent:
          description: The container of this category's parent category, if the current category is a subcategory.
          nullable: true
          properties:
            link:
              description: The URL to access the parent category in a browser.
              example: https://vimeo.com/categories/animation
              type: string
            name:
              description: The display name that identifies the parent category.
              example: Animation
              type: string
            uri:
              description: The unique identifier to access the parent of this category resource.
              example: /categories/animation
              type: string
          required:
            - link
            - name
            - uri
          type: object
        pictures:
          $ref: "#/components/schemas/picture"
#          allOf:
#            - $ref: "#/components/schemas/picture"
          description: The active picture for this category; defaults to vertical color bars.
        resource_key:
          description: The resource key of the category.
          example: e5595241643259c658ed6c85ca82985a6341edc7
          type: string
        subcategories:
          description: All the subcategories that belong to this category, if the current category is a top-level parent.
          items:
            properties:
              link:
                description: The URL to access the subcategory in a browser.
                example: https://vimeo.com/categories/animation/2d/videos
                type: string
              name:
                description: The display name that identifies the subcategory.
                example: 2D
                type: string
              uri:
                description: The unique identifier to access the subcategory resource.
                example: /categories/animation/subcategories/2d
                type: string
            required:
              - link
              - name
              - uri
            type: object
          type: array
        top_level:
          description: Whether the category isn't a subcategory of another category.
          example: "true"
          type: boolean
        uri:
          description: The unique identifier to access the category resource.
          example: /categories/animation
          type: string
      required:
#        - last_video_featured_time
        - link
        - metadata
        - name
        - parent
        - pictures
        - resource_key
        - top_level
        - uri
      title: Category
      type: object
    channel:
      properties:
        categories:
          description: The categories to which this channel belongs as specified by the channel moderators.
          items:
            $ref: "#/components/schemas/category"
          type: array
        created_time:
          description: The time in ISO 8601 format when the channel was created.
          example: 2007-10-23T17:00:43+00:00
          type: string
        description:
          description: A brief explanation of the channel's content.
          example: We really love videos, and these are the videos we really, really love.
          nullable: true
          type: string
        header:
          allOf:
            - $ref: "#/components/schemas/picture"
          description: The banner that appears by default at the top of the channel page.
        link:
          description: The URL to access the channel in a browser.
          example: https://vimeo.com/channels/staffpicks
          type: string
        metadata:
          description: Metadata about the channel.
          properties:
            connections:
              description: A collection of information that is connected to this resource.
              properties:
                privacy_users:
                  description: Information provided to channel moderators about which users they have specifically permitted to access a private channel. This data requires a bearer token with the `private` scope.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI. This data requires a bearer token with the `private` scope.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of users on this connection. This data requires a bearer token with the `private` scope.
                      example: 36
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
                      example: /channels/927/privacy/users
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
                users:
                  description: Information about the users following or moderating this channel.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of users on this connection.
                      example: 794634
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /channels/927/users
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
                videos:
                  description: Information about the videos that belong to this channel.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 12448
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /channels/927/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - privacy_users
                - users
                - videos
              type: object
            interactions:
              description: A list of resource URIs related to the channel.
              nullable: true
              properties:
                add_moderators:
                  description: An action indicating that the authenticated user is the owner of the channel and may therefore add other users as channel moderators. This data requires a bearer token with the `private` scope.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI. This data requires a bearer token with the `private` scope.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
                      example: /channels/1234/moderators
                      type: string
                  required:
                    - options
                    - uri
                  type: object
                add_to:
                  description: When a channel appears in the context of adding or removing a video from it (`/videos/{video_id}/available_channels`), include information about adding or removing the video. This data requires a bearer token with the `private` scope.
                  nullable: true
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI. This data requires a bearer token with the `private` scope.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
                      example: /channels/1234/videos/5678
                      type: string
                  required:
                    - options
                    - uri
                  type: object
                follow:
                  description: An action indicating if the authenticated user has followed this channel. This data requires a bearer token with the `private` scope.
                  properties:
                    added:
                      description: Whether the authenticated user has followed this channel. This data requires a bearer token with the `private` scope.
                      example: "true"
                      type: boolean
                    added_time:
                      description: The time in ISO 8601 format that the user followed this channel, or the null value if the user hasn't followed the channel. This data requires a bearer token with the `private` scope.
                      example: 2017-05-22T17:50:11+00:00
                      nullable: true
                      type: string
                    type:
                      description: |
                        Whether the authenticated user is a moderator or subscriber. This data requires a bearer token with the `private` scope.

                        Option descriptions:
                         * `moderator` - The authenticated user is a moderator.
                         * `subscriber` - The authenticated user is a subscriber.
                      enum:
                        - moderator
                        - subscriber
                      example: moderator
                      nullable: true
                      type: string
                    uri:
                      description: The URI for following or unfollowing this channel. PUT to this URI to follow the channel, or DELETE to this URI to unfollow the channel. This data requires a bearer token with the `private` scope.
                      example: /users/1234/channels/927
                      type: string
                  required:
                    - added
                    - added_time
                    - type
                    - uri
                  type: object
                moderate_videos:
                  description: An action indicating that the authenticated user is a moderator of the channel and may therefore add or remove videos from the channel. This data requires a bearer token with the `private` scope.
                  properties:
                    options:
                      description: An array of HTTP methods allowed on this URI. This data requires a bearer token with the `private` scope.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
                      example: /channels/1234/videos
                      type: string
                  required:
                    - options
                    - uri
                  type: object
              required:
                - add_moderators
                - add_to
                - follow
                - moderate_videos
              type: object
          required:
            - connections
            - interactions
          type: object
        modified_time:
          description: The time in ISO 8601 format when the album was last modified.
          example: 2018-03-21T22:52:29+00:00
          type: string
        name:
          description: The display name that identifies the channel.
          example: Vimeo Staff Picks
          type: string
        pictures:
          allOf:
            - $ref: "#/components/schemas/picture"
          description: The active image for the channel; defaults to the thumbnail of the last video added to the channel.
        privacy:
          description: The privacy settings of the channel.
          properties:
            view:
              description: |
                Who can view the channel:

                Option descriptions:
                 * `anybody` - Anyone can view the channel.
                 * `moderators` - Only moderators can view the channel.
                 * `users` - Only registered users can view the channel.
              enum:
                - anybody
                - moderators
                - users
              example: anybody
              type: string
          required:
            - view
          type: object
        resource_key:
          description: The channel resource key.
          example: e5595241643259c658ed6c85ca82985a6341edc7
          type: string
        tags:
          description: An array of all tags assigned to this channel.
          items:
            $ref: "#/components/schemas/tag"
          type: array
        uri:
          description: The unique identifier to access the channel resource.
          example: /channels/927
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The Vimeo user who owns the channel.
      required:
        - categories
        - created_time
        - description
        - header
        - link
        - metadata
        - modified_time
        - name
        - pictures
        - privacy
        - resource_key
        - tags
        - uri
        - user
      title: Channel
      type: object
    comment:
      properties:
        created_on:
          description: The time in ISO 8601 format when the comment was posted.
          example: 2018-03-05T21:04:47+00:00
          type: string
        metadata:
          properties:
            connections:
              properties:
                replies:
                  description: Information about this comment's replies.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of replies on this connection.
                      example: 42
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937/comments/12345/replies
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - replies
              type: object
          required:
            - connections
          type: object
        resource_key:
          description: The resource key string for the comment.
          example: bac1033deba2310ebba2caec33c23e4beea67aba
          type: string
        text:
          description: The content of the comment.
          example: I love this!
          type: string
        type:
          description: |
            The Vimeo content to which the comment relates:

            Option descriptions:
             * `video` - The comment is about a video.
          enum:
            - video
          example: video
          type: string
        uri:
          description: The unique identifier to access the comment resource.
          example: /videos/258684937/comments/12345
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The user who posted the comment.
          nullable: true
      required:
        - created_on
        - metadata
        - resource_key
        - text
        - type
        - uri
        - user
      title: Comment
      type: object
    content-rating:
      properties:
        code:
          description: |
            The code that uniquely identifies this content rating:

            Option descriptions:
             * `drugs` - Drug or alcohol use.
             * `language` - Profanity or sexually suggestive content.
             * `nudity` - Nudity.
             * `safe` - Suitable for all audiences.
             * `unrated` - No rating.
             * `violence` - Violent or graphic content.
          enum:
            - drugs
            - language
            - nudity
            - safe
            - unrated
            - violence
          example: violence
          type: string
        name:
          description: The description of this content rating.
          example: Violence
          type: string
        uri:
          description: The canonical relative URI of the content rating.
          example: /contentrating/violence
          nullable: true
          type: string
      required:
        - code
        - name
        - uri
      title: Content Rating
      type: object
    creative-commons:
      properties:
        code:
          description: |
            The code that uniquely identifies this Creative Commons license:

            Option descriptions:
             * `by` - Attribution
             * `by-nc` - Attribution Non-Commercial
             * `by-nc-nd` - Attribution Non-Commercial No Derivatives
             * `by-nc-sa` - Attribution Non-Commercial Share Alike
             * `by-nd` - Attribution No Derivatives
             * `by-sa` - Attribution Share Alike
             * `cc0` - Public Domain Dedication
          enum:
            - by
            - by-nc
            - by-nc-nd
            - by-nc-sa
            - by-nd
            - by-sa
            - cc0
          example: by-sa
          type: string
        name:
          description: The description of this Creative Commons license.
          example: Attribution Share Alike
          type: string
        uri:
          description: The canonical relative URI of the Creative Commons license.
          example: /creativecommons/by-sa
          nullable: true
          type: string
      required:
        - code
        - name
        - uri
      title: Creative Commons
      type: object
    credit:
      properties:
        name:
          description: The name of the person credited.
          example: Sam Doe
          type: string
        role:
          description: The character that this person portrayed, or the job that this person performed.
          example: Themselves
          type: string
        uri:
          description: The unique identifier to access the credits resource.
          example: /videos/258684937/credits/1234
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The Vimeo user associated with this credit.
        video:
          allOf:
            - $ref: "#/components/schemas/video"
          description: The video associated with this credit.
      required:
        - name
        - role
        - uri
      title: Credit
      type: object
    domain:
      properties:
        allow_hd:
          description: Whether to permit HD embeds on this domain.
          example: "true"
          type: boolean
        domain:
          description: The domain name.
          example: example.com
          type: string
        uri:
          description: The URI of the domain.
          example: /videos/258684937/privacy/domains/example.com
          type: string
      required:
        - allow_hd
        - domain
        - uri
      title: Domain
      type: object
    embed-settings:
      properties:
        html: # added
          type: string
          nullable: true
        interactive: # added
          type: boolean
          nullable: true
        badges: # added
          type: object
          properties:
            hdr:
              type: boolean
              nullable: true
            live:
              type: object
              properties:
                streaming:
                  type: boolean
                  nullable: true
                archived:
                  type: boolean
                  nullable: true
            staff_pick:
              type: object
              properties:
                normal:
                  type: boolean
                  nullable: true
                best_of_the_month:
                  type: boolean
                  nullable: true
                best_of_the_year:
                  type: boolean
                  nullable: true
                premiere:
                  type: boolean
                  nullable: true
            vod:
              type: boolean
              nullable: true
            weekend_challenge:
              type: boolean
              nullable: true
        buttons:
          description: A collection of information about the buttons that appear on the interface of the embeddable player.
          properties:
            embed:
              description: Whether the Embed button appears in the embeddable player for this video.
              example: "true"
              type: boolean
            fullscreen:
              description: Whether the Fullscreen button appears in the embeddable player for this video.
              example: "true"
              type: boolean
            hd:
              description: Whether the HD button appears in the embeddable player for this video.
              example: "true"
              type: boolean
            like:
              description: Whether the Like button appears in the embeddable player for this video.
              example: "true"
              type: boolean
            scaling:
              description: Whether the Scaling button appears in the embeddable player for this video.
              example: "true"
              type: boolean
            share:
              description: Whether the Share button appears in the embeddable player for this video.
              example: "true"
              type: boolean
            watchlater:
              description: Whether the Watch Later button appears in the embeddable player for this video.
              example: "true"
              type: boolean
#          required:
#            - embed
#            - fullscreen
#            - hd
#            - like
#            - scaling
#            - share
#            - watchlater
          type: object
        color:
          description: The primary player color, which controls the color of the progress bar, buttons, and more.
          example: "#0a0808"
          type: string
        logos:
          description: A collection of information about the logo in the corner of the embeddable player.
          properties:
            custom:
              description: A collection of information relating to custom logos in the embeddable player.
              properties:
                active:
                  description: Whether the custom logo appears in the embeddable player.
                  example: "true"
                  type: boolean
                link:
                  description: The URL that loads upon clicking the custom logo.
                  example: http://example.com
                  type: string
                sticky:
                  description: Whether the custom logo appears even when the player interface is hidden.
                  example: "true"
                  type: boolean
              required:
                - active
                - link
                - sticky
              type: object
            vimeo:
              description: Whether the Vimeo logo appears in the embeddable player for this video.
              example: "true"
              type: boolean
          required:
            - custom
            - vimeo
          type: object
        playbar:
          description: Whether the playbar appears in the embeddable player for this video.
          example: "true"
          type: boolean
        speed:
          description: Whether the speed controls appear in the embeddable player for this video.
          example: "true"
          type: boolean
        title:
          description: A collection of information relating to the embeddable player's title bar.
          properties:
            name:
              description: |
                How the embeddable player handles the video title:

                Option descriptions:
                 * `hide` - The title is hidden.
                 * `show` - The title is shown.
              enum:
                - hide
                - show
                - user
              example: hide
              type: string
            owner:
              description: |
                How the embeddable player handles the video owner's information:

                Option descriptions:
                 * `hide` - The owner's information is hidden.
                 * `show` - The owner's information is shown.
              enum:
                - hide
                - show
                - user
              example: hide
              type: string
            portrait:
              description: |
                How the embeddable player handles the video owner's portrait:

                Option descriptions:
                 * `hide` - The owner's portrait is hidden
                 * `show` - The owner's portrait is shown.
              enum:
                - hide
                - show
                - user
              example: hide
              type: string
          required:
            - name
            - owner
            - portrait
          type: object
        uri:
          description: The URI of the embed preset.
          example: /videos/258684937/presets/12345
          type: string
        volume:
          description: Whether the volume controls appear in the embeddable player for this video.
          example: "true"
          type: boolean
#      required:
#        - buttons
#        - color
#        - logos
#        - playbar
#        - speed
#        - title
#        - volume
      title: Embed Settings
      type: object
    endpoint:
      properties:
        methods:
          description: All HTTP methods permitted on this endpoint.
          items:
            type: string
          type: array
        path:
          description: The path section of the URL, which, when appended to the API host `https:///api.vimeo.com`, builds a full API endpoint.
          example: /me
          type: string
      required:
        - methods
        - path
      title: Endpoint
      type: object
    error:
      properties:
        developer_message:
          description: The error message that developers receive.
          example: The specified resource does not exist.
          type: string
        error:
          description: The error message that non-developer users receive.
          example: Something strange occurred. Please try again.
          type: string
        error_code:
          description: The error code.
          example: 5000
          type: number
        link:
          description: A link to more information about the error.
          type: string
      required:
        - developer_message
        - error
        - error_code
        - link
      title: Error
      type: object
    group:
      properties:
        created_time:
          description: The time in ISO 8601 format when the group was created.
          example: 2008-07-05T14:52:43+00:00
          type: string
        description:
          description: The group's description.
          example: Want to participate in our weekly Challenges? Join the Group to receive messages and new Challenges!
          nullable: true
          type: string
        link:
          description: The link to the group.
          example: https://vimeo.com/groups/weekendchallenge
          type: string
        metadata:
          description: Metadata about the group.
          properties:
            connections:
              description: A collection of information that is connected to this resource.
              properties:
                users:
                  description: Information about the members or moderators of this group.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of users on this connection.
                      example: 25798
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /groups/1108/users
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
                videos:
                  description: Information about the videos contained within this group.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 7252
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /groups/1108/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - users
                - videos
              type: object
            interactions:
              description: User actions that have involved the group. This data requires a bearer token with the `private` scope.
              properties:
                join:
                  description: An action indicating that someone has joined the group. This data requires a bearer token with the `private` scope.
                  properties:
                    added:
                      description: Whether the authenticated user has followed this group. This data requires a bearer token with the `private` scope.
                      example: "true"
                      type: boolean
                    added_time:
                      description: The time in ISO 8601 format when the user joined this group. This data requires a bearer token with the `private` scope.
                      nullable: true
                      type: string
                    title:
                      description: The user's title, or the null value if not applicable. This data requires a bearer token with the `private` scope.
                      example: Vimeo Staff
                      nullable: true
                      type: string
                    type:
                      description: |
                        Whether the authenticated user is a moderator or subscriber. This data requires a bearer token with the `private` scope.

                        Option descriptions:
                         * `member` - The authenticated user is a member.
                         * `moderator` - The authenticated user is a moderator.
                      enum:
                        - member
                        - moderator
                      example: member
                      nullable: true
                      type: string
                    uri:
                      description: The URI for following. PUT to this URI to follow, or DELETE to this URI to unfollow. This data requires a bearer token with the `private` scope.
                      example: /users/152184/groups/1108
                      type: string
                  required:
                    - added
                    - added_time
                    - title
                    - type
                    - uri
                  type: object
              required:
                - join
              type: object
          required:
            - connections
            - interactions
          type: object
        modified_time:
          description: The time in ISO 8601 format when the group was last modified.
          example: 2018-09-16T15:41:45+00:00
          type: string
        name:
          description: The group's display name.
          example: Vimeo Weekend Challenge
          type: string
        pictures:
          allOf:
            - $ref: "#/components/schemas/picture"
          description: The active picture for this group.
        privacy:
          description: The group's privacy settings.
          properties:
            comment:
              description: |
                Who can comment on the group:

                Option descriptions:
                 * `all` - Anyone can comment on the group.
                 * `members` - Only members can comment on the group.
              enum:
                - all
                - members
              example: all
              type: string
            invite:
              description: |
                Who can invite new members to the group:

                Option descriptions:
                 * `all` - Anyone can invite new members to join.
                 * `members` - Only group members can invite new members to join.
              enum:
                - all
                - members
              example: all
              type: string
            join:
              description: |
                Who can join the group:

                Option descriptions:
                 * `anybody` - Anyone can join the group.
                 * `members` - Only people with a Vimeo account can join the group.
              enum:
                - anybody
                - members
              example: anybody
              type: string
            videos:
              description: |
                Who can add videos to the group:

                Option descriptions:
                 * `all` - Anyone can add videos to the group.
                 * `members` - Only group members can add videos to the group.
              enum:
                - all
                - members
              example: all
              type: string
            view:
              description: |
                Who can view the group:

                Option descriptions:
                 * `anybody` - Anyone can view the group.
                 * `members` - Only group members can view the group.
              enum:
                - anybody
                - members
              example: anybody
              type: string
          required:
            - comment
            - invite
            - join
            - videos
            - view
          type: object
        resource_key:
          description: The resource key of the group.
          example: dc724af18fbdd4e59189f5fe768a5f8311527050
          type: string
        uri:
          description: The canonical relative URI of this group.
          example: /groups/1108
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The owner of the group.
          nullable: true
      required:
        - created_time
        - description
        - link
        - metadata
        - modified_time
        - name
        - pictures
        - privacy
        - resource_key
        - uri
      title: Group
      type: object
    language:
      properties:
        code:
          description: The code that represents this language.
          example: en-US
          type: string
        name:
          description: The name of the language.
          example: English (United States)
          type: string
      required:
        - code
        - name
      title: Language
      type: object
    legacy-error:
      properties:
        error:
          description: User-friendly error message
          example: Something strange occurred. Please try again.
          type: string
      required:
        - error
      title: Legacy Error
      type: object
    on-demand-genre:
      properties:
        canonical:
          description: The canonical name or URL slug of the genre.
          example: horror
          type: string
        interactions:
          properties:
            page:
              description: Interactions for On Demand pages that are in this genre.
              properties:
                added:
                  description: Whether this On Demand genre was added.
                  example: "true"
                  type: boolean
                options:
                  description: An array of HTTP methods permitted on this URI.
                  items:
                    type: string
                  type: array
                uri:
                  description: The URI to access the On Demand page.
                  example: /ondemand/genres/horror/pages/12345
                  type: string
              required:
                - added
                - options
                - uri
              type: object
          required:
            - page
          type: object
        link:
          description: The Vimeo URL for this genre.
          example: http://vimeo.com/ondemand/browse/horror
          type: string
        metadata:
          properties:
            connections:
              description: A collection of information connected to this resource.
              properties:
                pages:
                  description: Information about the On Demand pages related to this group.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /ondemand/genres/horror/pages
                      type: string
                  required:
                    - options
                    - uri
                  type: object
              required:
                - pages
              type: object
          required:
            - connections
          type: object
        name:
          description: The descriptive name of the genre.
          example: Horror
          type: string
        uri:
          description: The relative URI of the On Demand genre.
          example: /ondemand/genres/horror
          type: string
      required:
        - canonical
        - interactions
        - link
        - metadata
        - name
        - uri
      title: On Demand Genre
      type: object
    on-demand-page:
      properties:
        background:
          allOf:
            - $ref: "#/components/schemas/picture"
          description: The background image for the On Demand page on Vimeo.
          nullable: true
        colors:
          description: The primary and secondary colors used for rendering this On Demand page.
          properties:
            primary:
              description: The hexadecimal color code for the page's primary color.
              example: "#0a0808"
              type: string
            secondary:
              description: The hexadecimal color code for the page's secondary color.
              example: "#ba4a17"
              type: string
          required:
            - primary
            - secondary
          type: object
        content_rating:
          description: An array of the page's content ratings.
          items:
            type: string
          type: array
        created_time:
          description: The time in ISO 8601 format when the page was created.
          example: 2017-05-15T13:42:25+00:00
          type: string
        description:
          description: The description of this On Demand page.
          example: DARBY FOREVER follows the fantasies of Darby, a shopgirl at "Bobbins & Notions"
          nullable: true
          type: string
        domain_link:
          description: The link to this page on its own domain.
          example: https://example.com
          nullable: true
          type: string
        episodes:
          description: Information about this On Demand page's episodes, if the page is for a series.
          properties:
            buy:
              properties:
                active:
                  description: Whether all the videos on this On Demand page can be purchased as a whole.
                  example: "true"
                  type: boolean
                price:
                  description: The default price to buy an episode.
                  example: 9.99
                  nullable: true
                  type: number
              required:
                - active
                - price
              type: object
            rent:
              properties:
                active:
                  description: Whether all the videos on this On Demand page can be rented as a whole.
                  example: "true"
                  type: boolean
                period:
                  description: |
                    The rental period for the video:

                    Option descriptions:
                     * `1 day` - The rental period is one day.
                     * `1 month` - The rental period is one month.
                     * `1 week` - The rental period is one week.
                     * `1 year` - The rental period is one year.
                     * `2 day` - The rental period is two days.
                     * `24 hour` - The rental period is 24 hours.
                     * `3 day` - The rental period is three days.
                     * `3 month` - The rental period is three months.
                     * `30 day` - The rental period is 30 days.
                     * `48 hour` - The rental period is 48 hours.
                     * `6 month` - The rental period is six months.
                     * `60 day` - The rental period is 60 days.
                     * `7 day` - The rental period is 7 days.
                     * `72 hour` - The rental period is 72 hours.
                  enum:
                    - 1 day
                    - 1 month
                    - 1 week
                    - 1 year
                    - 2 day
                    - 24 hour
                    - 3 day
                    - 3 month
                    - 30 day
                    - 48 hour
                    - 6 month
                    - 60 day
                    - 7 day
                    - 72 hour
                  example: 1 day
                  nullable: true
                  type: string
                price:
                  description: The default price to rent an episode.
                  example: 2.99
                  nullable: true
                  type: number
              required:
                - active
                - period
                - price
              type: object
          required:
            - buy
            - rent
          type: object
        film:
          allOf:
            - $ref: "#/components/schemas/video"
          description: This On Demand page's film, if it is a film.
        genres:
          description: All the genres assigned to this page.
          items:
            $ref: "#/components/schemas/on-demand-genre"
          type: array
        link:
          description: The link to the page on Vimeo.
          example: https://vimeo.com/ondemand/darbyforever
          type: string
        metadata:
          description: Metadata about the On Demand page.
          properties:
            connections:
              description: A collection of information that is connected to this resource, including videos, genres, and pictures connections.
              properties:
                metadata:
                  properties:
                    connections:
                      properties:
                        comments:
                          description: Information about the comments associated with this page.
                          properties:
                            options:
                              description: An array of HTTP methods permitted on this URI.
                              items:
                                type: string
                              type: array
                            total:
                              description: The total number of comments on this connection.
                              example: 4
                              type: number
                            uri:
                              description: The API URI that resolves to the connection data.
                              example: /ondemand/pages/61326/comments
                              type: string
                          required:
                            - options
                            - total
                            - uri
                          type: object
                        genres:
                          description: Information about the genres associated with this page.
                          properties:
                            options:
                              description: An array of HTTP methods permitted on this URI.
                              items:
                                type: string
                              type: array
                            total:
                              description: The total number of genres on this connection.
                              example: 9
                              type: number
                            uri:
                              description: The API URI that resolves to the connection data.
                              example: /ondemand/pages/61326/genres
                              type: string
                          required:
                            - options
                            - total
                            - uri
                          type: object
                        likes:
                          description: Information about the likes associated with this page.
                          properties:
                            options:
                              description: An array of HTTP methods permitted on this URI.
                              items:
                                type: string
                              type: array
                            total:
                              description: The total number of likes on this connection.
                              example: 15
                              type: number
                            uri:
                              description: The API URI that resolves to the connection data.
                              example: /ondemand/pages/61326/likes
                              type: string
                          required:
                            - options
                            - total
                            - uri
                          type: object
                        pictures:
                          description: Information about the pictures associated with this page.
                          properties:
                            options:
                              description: An array of HTTP methods permitted on this URI.
                              items:
                                type: string
                              type: array
                            total:
                              description: The total number of pictures on this connection.
                              example: 3
                              type: number
                            uri:
                              description: The API URI that resolves to the connection data.
                              example: /ondemand/pages/61326/pictures
                              type: string
                          required:
                            - options
                            - total
                            - uri
                          type: object
                        seasons:
                          description: Information about the seasons associated with this page.
                          properties:
                            options:
                              description: An array of HTTP methods permitted on this URI.
                              items:
                                type: string
                              type: array
                            total:
                              description: The total number of seasons on this connection.
                              example: 3
                              type: number
                            uri:
                              description: The API URI that resolves to the connection data.
                              example: /ondemand/pages/61326/seasons
                              type: string
                          required:
                            - options
                            - total
                            - uri
                          type: object
                        videos:
                          description: Information about the videos associated with this page.
                          properties:
                            extra_total:
                              description: The total number of extra videos.
                              example: 14
                              type: number
                            main_total:
                              description: The total number of main videos.
                              example: 36
                              type: number
                            options:
                              description: An array of HTTP methods permitted on this URI.
                              items:
                                type: string
                              type: array
                            total:
                              description: The total number of videos on this connection.
                              example: 50
                              type: number
                            uri:
                              description: The API URI that resolves to the connection data.
                              example: /ondemand/pages/61326/videos
                              type: string
                            viewable_total:
                              description: The total number of viewable videos.
                              example: 50
                              type: number
                          required:
                            - extra_total
                            - main_total
                            - options
                            - total
                            - uri
                            - viewable_total
                          type: object
                      required:
                        - comments
                        - genres
                        - likes
                        - pictures
                        - seasons
                        - videos
                      type: object
                  required:
                    - connections
                  type: object
              required:
                - metadata
              type: object
            interactions:
              allOf:
                - $ref: "#/components/schemas/purchase-interaction"
              description: The user's available purchase interactions.
          required:
            - connections
            - interactions
          type: object
        modified_time:
          description: he time in ISO 8601 format when the page was last modified.
          example: 2017-05-15T13:42:25+00:00
          type: string
        name:
          description: A descriptive title of this On Demand page.
          example: Darby Forever
          type: string
        pictures:
          allOf:
            - $ref: "#/components/schemas/picture"
          description: The active poster for this On Demand page.
          nullable: true
        preorder:
          properties:
            active:
              description: Whether this page is available for preorder.
              example: "true"
              type: boolean
            cancel_time:
              description: The time in ISO 8601 format when the preorder was cancelled.
              example: 2017-05-16T13:13:46+00:00
              type: string
            publish_time:
              description: The time in ISO 8601 format when the preorder was released to the public.
              example: 2017-05-15T13:12:52+00:00
              type: string
            time:
              description: The time in ISO 8601 format when the preorder started.
              example: 2017-05-15T13:13:31+00:00
              type: string
          required:
            - active
            - cancel_time
            - publish_time
            - time
          type: object
        published:
          properties:
            enabled:
              description: Whether this On Demand page has been published.
              example: "true"
              type: boolean
            time:
              description: The time in IS 8601 format when this page was published.
              example: 2017-05-15T13:12:52+00:00
              type: string
          required:
            - enabled
            - time
          type: object
        rating:
          description: The rating of this page.
          example: 7
          nullable: true
          type: number
        resource_key:
          description: The VOD resource key.
          example: bac1033deba2310ebba2caec33c23e4beea67aba
          type: string
        sku:
          description: The creator-designated SKU for this On Demand page.
          example: VIME0001
          nullable: true
          type: string
        subscription:
          description: Information about subscribing to this On Demand page, if enabled.
          nullable: true
          properties:
            active:
              description: Whether this product is active.
              example: "true"
              type: boolean
            link:
              description: The link to this product on Vimeo.
              example: https://vimeo.com/ondemand/darbyforever
              nullable: true
              type: string
            period:
              description: The product's rental period.
              type: string
            price:
              description: The accepted currencies and respective pricing for this product.
              type: object
          required:
            - active
            - link
            - price
          type: object
        theme:
          description: The graphical theme for this On Demand page.
          example: vader
          type: string
        thumbnail:
          allOf:
            - $ref: "#/components/schemas/picture"
          description: The thumbnail image for the On Demand page on Vimeo.
          nullable: true
        trailer:
          allOf:
            - $ref: "#/components/schemas/video"
          description: The trailer for this On Demand page.
          nullable: true
        type:
          description: |
            Whether this On Demand page is for a film or a series.

            Option descriptions:
             * `film` - The On Demand page is for a film.
             * `series` - The On Demand page is for a series.
          enum:
            - film
            - series
          example: film
          type: string
        uri:
          description: The relative URI of the On Demand page.
          example: /ondemand/pages/61326
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The user who created this On Demand page.
          nullable: true
      required:
        - background
        - colors
        - content_rating
        - description
        - domain_link
        - episodes
        - genres
        - link
        - metadata
        - name
        - pictures
        - preorder
        - published
        - rating
        - resource_key
        - subscription
        - theme
        - thumbnail
        - trailer
        - type
        - uri
        - user
      title: On Demand Page
      type: object
    on-demand-promotion:
      properties:
        access_type:
          description: |
            The type of access that this promotion grants:

            Option descriptions:
             * `default` - Grants discounts on existing product offerings.
             * `vip` - Grants free access either to VOD content before it is released or to access types that aren't part of the existing product offerings.
          enum:
            - default
            - vip
          example: default
          type: string
        discount_type:
          description: |
            The type of discount for which this promotion can be used.

            Option descriptions:
             * `dollars` - The discount is a certain fixed amount.
             * `free` - The discount is the full purchase price. VIP access promotions always use this discount type.
             * `percent` - The discount is a certain percentage of the full price.
          enum:
            - dollars
            - free
            - percent
          example: free
          type: string
        download:
          description: Whether this promotion grants download access to On Demand content.
          example: "true"
          type: boolean
        label:
          description: The prefix string for batch codes, or the null value for single codes.
          example: 8jgaieumbzstujhn8k304iwwezawkvwm
          nullable: true
          type: string
        metadata:
          description: The video's metadata.
          properties:
            connections:
              description: A list of resource URIs related to the On Demand promotion.
              properties:
                codes:
                  description: Information about the codes associated with this promotion.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of uses on this connection.
                      example: 1
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /ondemand/pages/61326/promotion/12345/codes
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - codes
              type: object
          required:
            - connections
          type: object
        percent_off:
          description: The percentage amount that is deducted from the product price.
          example: 100
          type: number
        product_type:
          description: |
            The type of product to which this promotion can be applied. Only `buy` and `rent` are available for the VIP access type:

            Option descriptions:
             * `any` - The promotion can be applied to any product.
             * `buy` - The promotion can be applied to a buyable single video.
             * `buy_episode` - The promotion can be applied to a buyable single episode.
             * `rent` - The promotion can be applied to a rentable single video.
             * `rent_episode` - The promotion can be applied to a rentable single episode.
             * `subscribe` - The promotion can be applied to a subscription.
          enum:
            - any
            - buy
            - buy_episode
            - rent
            - rent_episode
            - subscribe
          example: any
          type: string
        stream_period:
          description: |
            The amount of time that the user has access to the VOD content after redeeming a promo code.

            Option descriptions:
             * `1_week` - Access lasts for one week.
             * `1_year` - Access lasts for one year.
             * `24_hour` - Access lasts for 24 hours.
             * `30_days` - Access lasts for 30 days.
             * `3_month` - Access lasts for 3 months.
             * `48_hour` - Access lasts for 48 hours.
             * `6_month` - Access lasts for 6 months.
             * `72_hour` - Access lasts for 72 hours.
          enum:
            - 1_week
            - 1_year
            - 24_hour
            - 30_days
            - 3_month
            - 48_hour
            - 6_month
            - 72_hour
          example: 1_week
          nullable: true
          type: string
        total:
          description: The total amount of times that this promotion can be used.
          example: 1
          type: number
        type:
          description: |
            The way in which this promotion can generate promo codes:

            Option descriptions:
             * `batch` - Provides many unique promo codes that can only be used once each.
             * `batch_prefix` - Similar to `batch`, except that all codes have a similar prefix string. This mode is deprecated, yet it may still appear for some users.
             * `single` - Provides a single promo code with many uses.
          enum:
            - batch
            - batch_prefix
            - single
          example: batch
          type: string
        uri:
          description: The promotion's canonical relative URI.
          example: /ondemand/pages/61326/promotions/12345
          type: string
      required:
        - access_type
        - discount_type
        - download
        - label
        - metadata
        - percent_off
        - product_type
        - stream_period
        - total
        - type
        - uri
      title: On Demand Promotion
      type: object
    on-demand-promotion-code:
      properties:
        code:
          description: A promotion code that can be redeemed on Vimeo.
          example: 8jgaieumbzstujhn8k304iwwezawkvwm
          type: string
        link:
          description: A link to redeem the promotion code instantly.
          example: https://vimeo.com/r/0trBLg/OGpnYWlldW
          type: string
        max_uses:
          description: The total amount of times this code can be used.
          example: 1
          type: number
        uses:
          description: The number of times that this code has been used.
          example: 0
          type: number
      required:
        - code
        - link
        - max_uses
        - uses
      title: On Demand Promotion Code
      type: object
    on-demand-region:
      properties:
        country_code:
          description: The ISO 3166-1 alpha-2 code for this country.
          example: US
          type: string
        country_name:
          description: The descriptive name of this country.
          example: United States
          type: string
        uri:
          description: The region container's relative URI.
          example: /ondemand/pages/61326/regions/US
          type: string
      required:
        - country_code
        - country_name
        - uri
      title: On Demand Region
      type: object
    on-demand-season:
      properties:
        description:
          description: The description for this season.
          example: Season 1
          type: string
        metadata:
          properties:
            connections:
              properties:
                videos:
                  description: The Videos connection.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 13
                      type: number
                    uri:
                      description: The API URI that resolves to the connection ∂data.
                      example: /ondemand/pages/61326/season/12345/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - videos
              type: object
          required:
            - connections
          type: object
        name:
          description: The descriptive name of the season.
          example: Season 1
          type: string
        position:
          description: The position of the season relative to other seasons in the series.
          example: 1
          type: number
        resource_key:
          description: The unique identifier for this On Demand season.
          example: bac1033deba2310ebba2caec33c23e4beea67aba
          type: string
        type:
          description: The type of season.
          example: main
          type: string
        uri:
          description: The season container's relative URI.
          example: /ondemand/pages/61326/seasons/12345
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The creator of this On Demand page.
          nullable: true
      required:
        - description
        - metadata
        - name
        - position
        - resource_key
        - type
        - uri
        - user
      title: On Demand Season
      type: object
    on-demand-video:
      properties:
        buy:
          description: Information about purchasing this video.
          nullable: true
          properties:
            active:
              description: Whether this On Demand video can be purchased.
              example: "true"
              type: boolean
            price:
              description: A map of currency type to price.
              type: object
            purchased:
              description: Whether this On Demand video has been purchased.
              example: "true"
              type: boolean
          required:
            - active
            - price
          type: object
        description:
          description: Description of the On Demand video.
          example: DARBY FOREVER follows the fantasies of Darby, a shopgirl at "Bobbins & Notions".
          type: string
        duration:
          description: The duration of the On Demand video.
          example: "1197"
          type: string
        episode:
          description: The episode number of the On Demand video.
          example: 1
          type: number
        interactions:
          description: An object containing information about how the authenticated user can interact with this On Demand page.
          properties:
            page:
              description: Information about how the authenticated user can interact with the connection to the video's On Demand page.
              properties:
                added:
                  description: Whether this On Demand page was added.
                  example: "true"
                  type: boolean
                options:
                  description: An array of HTTP methods permitted on this URI.
                  items:
                    type: string
                  type: array
                uri:
                  description: The URI to access the On Demand page.
                  example: /ondemand/pages/61326
                  type: string
              required:
                - added
                - options
                - uri
              type: object
          required:
            - page
          type: object
        link:
          description: The link to this video on Vimeo.
          example: https://vimeo.com/ondemand/darbyforever/12345
          type: string
        metadata:
          description: Metadata information about this video.
          properties:
            connections:
              properties:
                season:
                  description: Information about this season.
                  properties:
                    name:
                      description: The name of the season on this connection.
                      example: Season 1
                      type: string
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /ondemand/pages/61326/seasons/12345
                      type: string
                  required:
                    - name
                    - options
                    - uri
                  type: object
              required:
                - season
              type: object
            interactions:
              properties:
                likes:
                  description: Information about the user's Like interactions with this video.
                  properties:
                    added:
                      description: Whether the user has liked this video.
                      example: "true"
                      type: boolean
                    added_time:
                      description: The time in ISO 8601 format when the user liked this video.
                      example: 2017-05-12T21:42:42+00:00
                      type: string
                    uri:
                      description: The URI for the user to like this video.
                      example: /users/152184/likes/12345
                      type: string
                  required:
                    - added
                    - added_time
                    - uri
                  type: object
                watchlater:
                  description: Information about the user's Watch Later interactions with this video.
                  properties:
                    added:
                      description: Whether the user has added this video to their Watch Later queue.
                      example: "true"
                      type: boolean
                    added_time:
                      description: The time in ISO 8601 format when the user added this video to their Watch Later queue.
                      example: 2017-05-12T21:42:42+00:00
                      type: string
                    uri:
                      description: The URI for the user to add this video to their Watch Later queue.
                      example: /users/152184/watchlater/12345
                      type: string
                  required:
                    - added
                    - added_time
                    - uri
                  type: object
              required:
                - likes
                - watchlater
              type: object
          required:
            - connections
            - interactions
          type: object
        name:
          description: The title of the On Demand video.
          example: Darby Forever
          type: string
        options:
          description: An array of HTTP methods permitted on this URI.
          items:
            type: string
          type: array
        pictures:
          allOf:
            - $ref: "#/components/schemas/picture"
          description: The active picture for this video.
        play_progress:
          description: The user's most recent play position in seconds for this video.
          example: 30
          type: number
        position:
          description: Describes the manual position of this video relative to the other videos owned by this On Demand page.
          example: 1
          type: number
        release_date:
          description: The time in ISO 8601 format when the On Demand video was created or published.
          example: 2017-05-12T21:06:42+00:00
          type: string
        release_year:
          description: The year that this On Demand video was released.
          example: 2016
          nullable: true
          type: number
        rent:
          description: Information about renting this video.
          nullable: true
          properties:
            active:
              description: Whether this On Demand video can be rented.
              example: "true"
              type: boolean
            price:
              description: A map of currency type to price.
              type: object
            purchased:
              description: Whether this On Demand video has been rented.
              example: "true"
              type: boolean
          required:
            - active
            - price
          type: object
        type:
          description: |
            The type of the On Demand video:

            Option descriptions:
             * `extra` - The On Demand video is an extra feature.
             * `main` - The On Demand video is a main feature.
             * `trailer` - The On Demand video is a trailer.
          enum:
            - extra
            - main
            - trailer
          example: main
          type: string
        uri:
          description: The video container's relative URI.
          example: /ondemand/pages/61326/videos/12345
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The owner of the video.
      required:
        - buy
        - interactions
        - link
        - metadata
        - play_progress
        - release_year
        - rent
        - type
        - uri
      title: On Demand Video
      type: object
    picture:
      properties:
        base_link: # added
          type: string
          nullable: true
        default_picture: # added
          type: boolean
          nullable: true
        active:
          description: Whether this picture is the active picture for its parent resource.
          example: "true"
          type: boolean
        link:
          description: The upload URL for the picture. This field appears when you create the picture resource for the first time.
          type: string
        resource_key:
          description: The picture's resource key string.
          example: dc724af18fbdd4e59189f5fe768a5f8311527050
          type: string
        sizes:
          description: An array containing reference information about all available image files.
          items:
            properties:
              height:
                description: The height of the image.
                example: 720
                nullable: true
                type: number
              link:
                description: The direct link to the image.
                example: https://i.vimeocdn.com/video/581495283_1280x720.jpg?r=pad
                type: string
              link_with_play_button:
                description: The direct link to the image with a play button overlay.
                example: https://i.vimeocdn.com/filter/overlay?src0=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F581495283_1280x720.jpg&src1=http%3A%2F%2Ff.vimeocdn.com%2Fp%2Fimages%2Fcrawler_play.png
                type: string
              width:
                description: The width of the image.
                example: 1280
                type: number
            required:
              - height
              - link
              - width
            type: object
          type: array
        type:
          description: |
            The type of the picture:

            Option descriptions:
             * `caution` - An image that is appropriate for all ages.
             * `custom` - A custom image for the video.
             * `default` - The default image for the video.
          enum:
            - caution
            - custom
            - default
          example: caution
          type: string
        uri:
          description: The picture's URI.
          example: /users/152184/pictures/12345
          type: string
          nullable: true
#      required:
#        - active
#        - resource_key
#        - sizes
#        - type
#        - uri
      title: Picture
      type: object
    play:
      properties:
        progressive:
          description: Progressive files.
          items:
            properties:
              created_time:
                description: The time in ISO 8601 format when this video file was created.
                example: 2017-05-16T17:21:51+00:00
                type: string
              fps:
                description: The FPS of the video file.
                example: 30
                type: number
              height:
                description: The height in pixels of the video.
                example: 720
                nullable: true
                type: number
              link:
                description: The direct link to this video file.
                type: string
              link_expiration_time:
                description: The time in ISO 8601 format when the link to this video file expires.
                example: 2017-05-16T17:21:51+00:00
                type: string
              log:
                description: The URLs for logging events.
                type: object
              md5:
                description: The MD5 hash of the video file.
                example: 1bc29b36f623ba82aaf6724fd3b16718
                type: string
              size:
                description: The file size in bytes of this video.
                example: 5000000
                nullable: true
                type: number
              type:
                description: |
                  The type of the video file:

                  Option descriptions:
                   * `source` - The video is a source file.
                   * `video/mp4` - The video is in MP4 format.
                   * `video/webm` - The video is in WebM format.
                   * `vp6/x-video` - The video is in VP6 format.
                enum:
                  - source
                  - video/mp4
                  - video/webm
                  - vp6/x-video
                example: source
                nullable: true
                type: string
              width:
                description: The width in pixels of the video.
                example: 1280
                nullable: true
                type: number
            required:
              - created_time
              - fps
              - height
              - link
              - link_expiration_time
              - md5
              - size
              - type
              - width
            type: object
          type: array
        status:
          description: |
            The play status of the video:

            Option descriptions:
             * `playable` - The video is playable.
             * `purchase_required` - The video must be purchased.
             * `restricted` - Playback for the video is restricted.
             * `unavailable` - The video is unavailable.
          enum:
            - playable
            - purchase_required
            - restricted
            - unavailable
          example: playable
          type: string
      required:
        - status
      title: Play
      type: object
    portfolio:
      properties:
        created_time:
          description: The time in ISO 8601 format when the portfolio was created.
          example: 2017-05-16T19:56:07+00:00
          type: string
        description:
          description: The portfolio's description.
          example: The Vimeo Staff original productions.
          nullable: true
          type: string
        link:
          description: The link to the portfolio.
          example: https://vimeopro.com/staff/originals
          type: string
        metadata:
          description: Metadata about the album.
          properties:
            connections:
              description: A list of resource URIs related to the album.
              properties:
                videos:
                  description: Information about the videos contained within this portfolio.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 18
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/portfolios/12345/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - videos
              type: object
          required:
            - connections
          type: object
        modified_time:
          description: The time in ISO 8601 format when the portfolio's data was last modified.
          example: 2017-05-17T19:56:07+00:00
          type: string
        name:
          description: The display name of the portfolio.
          example: Vimeo Originals!
          type: string
        sort:
          description: |
            The default video sort order for the portfolio:

            Option descriptions:
             * `alphabetical` - The default sort order is alphabetical by name.
             * `clips` - The default sort order is video creation date.
             * `modified` - The default sort order is the order in which the videos were modified.
             * `recent` - The default sort order is the order in which the videos were added.
          enum:
            - alphabetical
            - clips
            - modified
            - recent
          example: alphabetical
          type: string
        uri:
          description: The canonical relative URI of the portfolio.
          example: /users/152184/portfolios/12345
          type: string
      required:
        - created_time
        - description
        - link
        - metadata
        - modified_time
        - name
        - sort
        - uri
      title: Portfolio
      type: object
    presets:
      properties:
        metadata:
          description: Metadata about the album.
          properties:
            connections:
              description: A list of resource URIs related to the album.
              properties:
                videos:
                  description: Information about the videos in this preset.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 13
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/presets/12345/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - videos
              type: object
          required:
            - connections
          type: object
        name:
          description: The display name of the presets group.
          example: Minimalism
          type: string
        settings:
          description: The contents of the presets group.
          properties:
            buttons:
              properties:
                embed:
                  description: Whether the preset includes Embed button settings.
                  example: "true"
                  type: boolean
                hd:
                  description: Whether the preset includes HD button settings.
                  example: "true"
                  type: boolean
                like:
                  description: Whether the preset includes Like button settings.
                  example: "true"
                  type: boolean
                share:
                  description: Whether the present includes Share button settings.
                  example: "true"
                  type: boolean
                vote:
                  description: Whether the preset includes Vote button settings.
                  example: "true"
                  type: boolean
                watchlater:
                  description: Whether the preset includes Watch Later button settings.
                  example: "true"
                  type: boolean
              required:
                - embed
                - hd
                - like
                - share
                - vote
                - watchlater
              type: object
            logos:
              properties:
                custom:
                  description: Whether the preset includes custom logo settings.
                  example: "true"
                  type: boolean
                sticky_custom:
                  description: Whether the present includes sticky custom logo settings.
                  example: "true"
                  type: boolean
                vimeo:
                  description: Whether the preset includes Vimeo logo settings.
                  example: "true"
                  type: boolean
              required:
                - custom
                - sticky_custom
                - vimeo
              type: object
            outro:
              properties:
                clips:
                  description: A comma-separated list of video URIs. Present only if the type is `uploaded_clips`.
                  example: /videos/258684937,/videos/273576296
                  nullable: true
                  type: string
                link:
                  description: The outro link settings. Present only if the type is `link`.
                  nullable: true
                  properties:
                    name:
                      description: The name of the outro link.
                      example: Example Outro
                      type: string
                    url:
                      description: The URL of the outro link.
                      example: https://example.com
                      type: string
                  type: object
                text:
                  description: The outro text. Present only if the type is `text`.
                  example: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                  nullable: true
                  type: string
                type:
                  description: "The preset outro type:"
                  enum:
                    - link
                    - no idea
                    - text
                    - uploaded_clips
                    - uploaded_videos
                  example: link
                  type: string
                videos:
                  description: A comma-separated list of video URIs. Present only if type is `no idea`.
                  example: /videos/258684937,/videos/273576296
                  nullable: true
                  type: string
              required:
                - type
              type: object
          required:
            - buttons
            - logos
            - outro
          type: object
        uri:
          description: The canonical relative URI of the presets object.
          example: /users/152184/presets/12345
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The owner of the preset.
          nullable: true
      required:
        - metadata
        - name
        - settings
        - uri
        - user
      title: Presets
      type: object
    project:
      properties:
        created_time:
          description: The time in ISO 8601 format when the project was created.
          example: 2017-05-23T14:36:22+00:00
          type: string
        metadata:
          description: The project's metadata.
          properties:
            connections:
              description: A list of resource URIs related to the project.
              properties:
                videos:
                  description: A standard connection object indicating how to get all the videos in this project.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 12
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/projects/12345/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - videos
              type: object
          required:
            - connections
          type: object
        modified_time:
          description: The time in ISO 8601 format when the project was last modified.
          example: 2017-05-23T14:36:22+00:00
          type: string
        name:
          description: The name of the folder.
          example: Rough cuts
          type: string
        resource_key:
          description: The resource key string of the project.
          example: dc724af18fbdd4e59189f5fe768a5f8311527050
          type: string
        uri:
          description: The URI of the project.
          example: /me/projects/12345
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The owner of the project.
      required:
        - created_time
        - metadata
        - modified_time
        - name
        - resource_key
        - uri
        - user
      title: Project
      type: object
    purchase-interaction:
      properties:
        buy:
          description: Information on purchasing this video.
          nullable: true
          properties:
            drm:
              description: Whether the On Demand video for purchase has DRM.
              example: "true"
              type: boolean
          type: object
        rent:
          description: Information on renting this video.
          nullable: true
          type: object
        subscribe:
          description: Information on subscribing to this video.
          nullable: true
          properties:
            drm:
              description: Whether the On Demand subscription has DRM.
              example: "true"
              type: boolean
            expires_time:
              description: The time in ISO 8601 format when the On Demand video will expire.
              example: 2018-03-05T21:04:47+00:00
              nullable: true
              type: string
            link:
              description: The URL to purchase this On Demand subscription on Vimeo.
              example: https://vimeo.com/ondemand/darbyforever
              nullable: true
              type: string
            purchase_time:
              description: The time in ISO 8601 format when the On Demand was purchased.
              example: 2018-03-05T21:04:47+00:00
              nullable: true
              type: string
            stream:
              description: |
                The user's streaming access to this On Demand subscription:

                Option descriptions:
                 * `available` - The On Demand subscription is available for streaming.
                 * `purchased` - The On Demand subscription has been purchased.
                 * `restricted` - Streaming for the On Demand subscription is restricted.
                 * `unavailable` - The On Demand subscription is unavailable.
              enum:
                - available
                - purchased
                - restricted
                - unavailable
              example: available
              type: string
            uri:
              description: The On Demand subscription's product URI.
              example: /ondemand/pages/61326/products/12345
              nullable: true
              type: string
          type: object
      title: Purchase Interaction
      type: object
    tag:
      properties:
        tag:  # added
          type: string
          nullable: true
        canonical:
          description: The normalized canonical tag name.
          example: awesome
          type: string
        metadata:
          description: Metadata about the group.
          properties:
            connections:
              description: A collection of information that is connected to this resource.
              properties:
                videos:
                  description: Information about the videos related to this tag.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 34371
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /tags/awesome/videos
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - videos
              type: object
          required:
            - connections
          type: object
        name:
          description: The tag value.
          example: awesome
          type: string
        resource_key:
          description: The tag's resource key string.
          example: bac1033deba2310ebba2caec33c23e4beea67aba
          type: string
        uri:
          description: The canonical relative URI of the tag.
          example: /videos/258684937/tags/awesome
          type: string
      required:
        - canonical
        - metadata
        - name
        - resource_key
        - uri
      title: Tag
      type: object
      nullable: true # added
    text-track:
      properties:
        active:
          description: Whether this text track is active.
          example: "true"
          type: boolean
        hls_link:
          description: The read-only URL of the text track file, intended for use with HLS playback.
          type: string
        hls_link_expires_time:
          description: The time in ISO 8601 format when the read-only HLS playback text track file expires.
          example: "1494888499"
          type: string
        language:
          description: |-
            The language code for this text track. To see a full list, request
            `/languages?filter=texttrack`.
          example: en-US
          nullable: true
          type: string
        link:
          description: The read-only URL of the text track file. You can upload to this link when you create it for the first time.
          type: string
        link_expires_time:
          description: The time in ISO 8601 format when the text track link expires.
          example: "1494888499"
          type: string
        name:
          description: The descriptive name of this text track.
          example: English Subtitles
          nullable: true
          type: string
        type:
          description: |
            The type of the text track:

            Option descriptions:
             * `captions` - The text track is for captions.
             * `subtitles` - The text track is for subtitles.
          enum:
            - captions
            - subtitles
          example: captions
          nullable: true
          type: string
        uri:
          description: The relative URI of the text track.
          example: /videos/258684937/texttracks/12345
          type: string
      required:
        - active
        - hls_link
        - hls_link_expires_time
        - language
        - link
        - link_expires_time
        - name
        - type
        - uri
      title: Text Track
      type: object
    upload-attempt:
      properties:
        clip:
          allOf:
            - $ref: "#/components/schemas/video"
          description: The video to upload.
        complete_uri:
          description: The completion URI of the upload.
          example: /users/152184/uploads/12345?video_file_id=5678&upgrade=true&signature=r394y347ffefeff434
          type: string
        form:
          description: The HTML upload form.
          type: string
        ticket_id:
          description: The ticket identifier string for the upload.
          example: 3da5dac09
          type: string
        upload_link:
          description: The upload URL.
          example: https://123456.cloud.vimeo.com/upload?ticket_id=1234asdf
          type: string
        uri:
          description: The upload URI.
          example: /users/152184/uploads/12345
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The owner of the uploaded video.
      required:
        - ticket_id
        - upload_link
        - uri
        - user
      title: Upload Attempt
      type: object
    user:
      properties:
        available_for_hire: # added
          type: boolean
          nullable: true
        can_work_remotely: # added
          type: boolean
          nullable: true
        gender: # added
          type: string
          nullable: true
        short_bio: # added
          type: string
          nullable: true
        skills: # added
          type: array
          items:
            type: object
            properties:
              uri:
                type: string
              name:
                type: string
        capabilities: # added
          type: object
          properties:
            hasLiveSubscription:
              type: boolean
              nullable: true
            hasEnterpriseLihp:
              type: boolean
              nullable: true
            hasSvvTimecodedComments:
              type: boolean
              nullable: true
            hasSimplifiedEnterpriseAccount:
              type: boolean
              nullable: true
        location_details: # added
          type: object
          properties:
            formatted_address:
              type: string
              nullable: true
            latitude:
              type: number
              nullable: true
            longitude:
              type: number
              nullable: true
            city:
              type: string
              nullable: true
            state:
              type: string
              nullable: true
            neighborhood:
              type: string
              nullable: true
            sub_locality:
              type: string
              nullable: true
            state_iso_code:
              type: string
              nullable: true
            country:
              type: string
              nullable: true
            country_iso_code:
              type: string
              nullable: true
        account:
          description: |
            The user's account type:

            Option descriptions:
             * `basic` - The user has a Vimeo Basic subscription.
             * `business` - The user has a Vimeo Business subscription.
             * `live_business` - The user has a Vimeo Business Live subscription.
             * `live_premium` - The user has a Vimeo Premium subscription.
             * `live_pro` - The user has a Vimeo PRO Live subscription.
             * `plus` - The user has a Vimeo Plus subscription.
             * `pro` - The user has a Vimeo Pro subscription.
             * `pro_unlimited` - The user has a Vimeo PRO Unlimited subscription.
             * `producer` - The user has a Vimeo Producer subscription.
             * `custom`
             * `enterprise`
             * `free`
             * `standard`
          enum:
            - basic
            - business
            - live_business
            - live_premium
            - live_pro
            - plus
            - pro
            - pro_unlimited
            - producer
            - custom  # added
            - enterprise  # added
            - free # added
            - standard  # added
            - advanced  # added
            - starter  # added
          example: basic
          type: string
        bio:
          description: The user's bio.
          example: This is where you will find videos and news updates from the staff.
          nullable: true
          type: string
#        content_filter:  # private_token
#          description: |
#            The user's content filters:
#
#            Option descriptions:
#             * `drugs` - Drugs or alcohol use.
#             * `language` - Profanity or sexually suggestive content.
#             * `nudity` - Nudity.
#             * `safe` - Suitable for all audiences.
#             * `unrated` - No rating.
#             * `violence` - Violent or graphic content.
#          enum:
#            - drugs
#            - language
#            - nudity
#            - safe
#            - unrated
#            - violence
#          example: drugs
#          items:
#            type: string
#          type: array
        created_time:
          description: The time in ISO 8601 format when the user account was created.
          example: 2007-01-18T16:40:11+00:00
          type: string
        email:
          description: The user's email address. This data requires a bearer token with the `email` scope.
          example: user@example.com
          type: string
        link:
          description: The absolute URL of this user's profile page.
          example: https://vimeo.com/staff
          type: string
        location:
          description: The user's location.
          example: New York City
          nullable: true
          type: string
        metadata:
          description: The user's metadata.
          properties:
            connections:
              description: The list of resource URIs related to the user.
              properties:
                folders_root: # added
                  type: object
                  description: Information about the albums created by this user.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of albums on this connection.
                      example: 3
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/albums
                      type: string
                membership: # added
                  type: object
                  description: Information about the albums created by this user.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of albums on this connection.
                      example: 3
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/albums
                      type: string
                permission_policies: # added
                  type: object
                  description: Information about the albums created by this user.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of albums on this connection.
                      example: 3
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/albums
                      type: string
                teams: # added
                  type: object
                  description: Information about the albums created by this user.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of albums on this connection.
                      example: 3
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/albums
                      type: string
                albums:
                  description: Information about the albums created by this user.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of albums on this connection.
                      example: 3
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/albums
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
                appearances:
                  description: Information about the appearances of this user in other videos.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of appearances on this connection.
                      example: 6
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/appearances
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
#                block: # private_token
#                  description: Information on the users that the current user has blocked. This data requires a bearer token with the `private` scope.
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI. This data requires a bearer token with the `private` scope.
#                      items:
#                        type: string
#                      type: array
#                    total:
#                      description: The total number of blocked users on this connection. This data requires a bearer token with the `private` scope.
#                      example: 73
#                      type: number
#                    uri:
#                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
#                      example: /me/block
#                      type: string
##                  required:
##                    - options
##                    - total
##                    - uri
#                  type: object
#                categories:  # private_token
#                  description: Information about this user's followed categories.
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    total:
#                      description: The total number of categories on this connection.
#                      example: 5
#                      type: number
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      example: /users/152184/categories
#                      type: string
##                  required:
##                    - options
##                    - total
##                    - uri
#                  type: object
                channels:
                  description: Information about this user's subscribed channels.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of channels on this connection.
                      example: 4
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/channels
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
                feed:
                  description: Information about this user's feed.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/feed
                      type: string
#                  required:
#                    - options
#                    - uri
                  type: object
#                folders: # private_token
#                  description: Information about this user's folders.
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    total:
#                      description: The total number of folders on this connection.
#                      example: 9
#                      type: number
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      example: /me/folders
#                      type: string
##                  required:
##                    - options
##                    - total
##                    - uri
#                  type: object
                followers:
                  description: Information about the user's followers.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of followers on this connection.
                      example: 12
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/followers
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
                following:
                  description: Information about the users that the current user is following.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of users on this connection.
                      example: 47
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/following
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
                groups:
                  description: Information about the groups created by this user.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of groups on this connection.
                      example: 2
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/groups
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
                likes:
                  description: Information about the videos that this user has liked.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of likes on this connection.
                      example: 300
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/likes
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
                moderated_channels:
                  description: Information about the channels that this user moderates.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of channels on this connection.
                      example: 1
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/channels?filter=moderated
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
                pictures:
                  description: Information about this user's portraits.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of pictures on this connection.
                      example: 3
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/pictures
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
                portfolios:
                  description: Information about this user's portfolios.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of portfolios on this connection.
                      example: 5
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/portfolios
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
#                recommended_channels:  # private_token
#                  description: A collection of recommended channels for the current user to follow. This data requires a bearer token with the `private` scope.
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI. This data requires a bearer token with the `private` scope.
#                      items:
#                        type: string
#                      type: array
#                    total:
#                      description: The total number of channels on this connection. This data requires a bearer token with the `private` scope.
#                      example: 4
#                      type: number
#                    uri:
#                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
#                      example: /me/recommendations/channels
#                      type: string
##                  required:
##                    - options
##                    - total
##                    - uri
#                  type: object
#                recommended_users: # private_token
#                  description: A Collection of recommended users for the current user to follow. This data requires a bearer token with the `private` scope.
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI. This data requires a bearer token with the `private` scope.
#                      items:
#                        type: string
#                      type: array
#                    total:
#                      description: The total number of users on this connection. This data requires a bearer token with the `private` scope.
#                      example: 6
#                      type: number
#                    uri:
#                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
#                      example: /me/recommendations/users
#                      type: string
##                  required:
##                    - options
##                    - total
##                    - uri
#                  type: object
                shared:
                  description: Information about the videos that have been shared with this user.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 15
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/shared/videos
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
                videos:
                  description: Information about the videos uploaded by this user.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 36
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /users/152184/videos
                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
                  type: object
#                watched_videos:  # private_token
#                  description: Information about the videos that this user has watched.
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    total:
#                      description: The total number of videos on this connection.
#                      example: 322
#                      type: number
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      example: /me/watched/videos
#                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
#                  type: object
#                watchlater:  # private_token
#                  description: Information about the videos that this user wants to watch later.
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    total:
#                      description: The total number of videos on this connection.
#                      example: 14
#                      type: number
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      example: /users/152184/watchlater
#                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
#                  type: object
#              required:
#                - albums
#                - appearances
#                - block
#                - categories
#                - channels
#                - feed
#                - folders
#                - followers
#                - following
#                - groups
#                - likes
#                - moderated_channels
#                - pictures
#                - portfolios
#                - recommended_channels
#                - recommended_users
#                - shared
#                - videos
#                - watched_videos
#                - watchlater
              type: object
#            interactions:  # private_token
#              properties:
#                add_privacy_user:  # private_token
#                  properties:
#                    options:
#                      description: An array of the HTTP methods permitted on this URI. This data requires a bearer token with the `private` scope.
#                      items:
#                        type: string
#                      type: array
#                    uri:
#                      description: The API URI that resolves to the connection data. This data requires a bearer token with the `private` scope.
#                      example: /channels/152184/privacy/users
#                      type: string
#                  type: object
#                block: # private_token
#                  description: Information related to the block status of this user.
#                  properties:
#                    added:
#                      description: Whether a user is blocking the current user.
#                      example: "true"
#                      type: boolean
#                    added_time:
#                      description: The time in ISO 8601 format when the block occurred, or the null value if no block exists.
#                      example: 2017-05-16T15:05:43+00:00
#                      nullable: true
#                      type: string
#                    options:
#                      description: An array of the HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    uri:
#                      description: The URI to block or unblock the user.
#                      example: /me/block/3766357
#                      type: string
##                  required:
##                    - added
##                    - added_time
##                    - options
##                    - uri
#                  type: object
#                follow:  # private_token
#                  description: Information related to the followed status of this user.
#                  properties:
#                    added:
#                      description: Whether a user is following the current user.
#                      example: "true"
#                      type: boolean
#                    options:
#                      description: An array of the HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    uri:
#                      description: The URI to follow the user.
#                      example: /users/152184/following/3766357
#                      type: string
##                  required:
##                    - added
##                    - options
##                    - uri
#                  type: object
#                report:  # private_token
#                  description: Information regarding where and how to report a user.
#                  properties:
#                    options:
#                      description: An array of the HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    reason:
#                      description: List of valid reasons for reporting a video.
#                      items:
#                        type: string
#                      type: array
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      example: /users/152184/report
#                      type: string
##                  required:
##                    - options
##                    - reason
##                    - uri
#                  type: object
#              required:
#                - block
#                - follow
#                - report
#              type: object
#          required:
#            - connections
#            - interactions
          type: object
        name:
          description: The user's display name.
          example: Vimeo Staff
          type: string
        pictures:
          $ref: "#/components/schemas/picture"
#          allOf:
#            - $ref: "#/components/schemas/picture"
          description: The active portrait of this user.
        preferences:
          properties:
            videos:
              properties:
                privacy:
                  properties:
                    add:
                      description: Whether other users can add the user's videos.
                      example: "true"
                      type: boolean
                    comments:
                      description: |
                        The user's privacy preference for comments:

                        Option descriptions:
                         * `anybody` - Anyone can comment on the user's videos.
                         * `contacts` - Only contacts can comment on the user's videos.
                         * `nobody` - No one can comment on the user's videos.
                      enum:
                        - anybody
                        - contacts
                        - nobody
                      example: anybody
                      type: string
                    download:
                      description: Whether other users can download the user's videos.
                      example: "true"
                      type: boolean
                    embed:
                      description: |
                        The user's privacy preference for embeds:

                        Option descriptions:
                         * `private` - Only the user can embed their own videos.
                         * `public` - Anyone can embed the user's videos.
                         * `whitelist` - Only those on the whitelist can embed the user's videos.
                      enum:
                        - private
                        - public
                        - whitelist
                      example: private
                      type: string
                    view:
                      description: |
                        The user's privacy preference for views:

                        Option descriptions:
                         * `anybody` - Anyone can view the user's videos.
                         * `contacts` - Only contacts can view the user's videos.
                         * `disable` - Views are disabled for the user's videos.
                         * `nobody` - No one except the user can view the user's videos.
                         * `password` - Only those with the password can view the user's videos.
                         * `unlisted` - Anybody can view the user's videos if they have a link.
                         * `users` - Only other Vimeo members can view the user's videos.
                      enum:
                        - anybody
                        - contacts
                        - disable
                        - nobody
                        - password
                        - unlisted
                        - users
                      example: anybody
                      type: string
                  type: object
              type: object
          type: object
        resource_key:
          description: The user's resource key string.
          example: bac1033deba2310ebba2caec33c23e4beea67aba
          type: string
        upload_quota:
          description: Appears only when the user has upload access and is looking at their own user record.
          properties:
            lifetime:
              description: Information about the user's lifetime upload usage.
              properties:
                free:
                  description: The number of bytes remaining in your lifetime maximum.
                  example: 5000000
                  nullable: true
                  type: number
                max:
                  description: The total number of bytes that you can upload across the lifetime of your account.
                  example: 5368709120
                  nullable: true
                  type: number
                used:
                  description: The number of bytes that you've already uploaded against your lifetime limit.
                  example: 5368704120
                  nullable: true
                  type: number
              required:
                - free
                - max
                - used
              type: object
            periodic:
              description: Information about the user's usage for the current period.
              properties:
                free:
                  description: The number of bytes remaining in your upload quota for the current period.
                  example: 5000000
                  nullable: true
                  type: number
                max:
                  description: The total number of bytes that you can upload per period.
                  example: 5368709120
                  nullable: true
                  type: number
                reset_date:
                  description: The time in ISO 8601 format when your upload quota resets.
                  example: 2029-03-13T02:35:13-04:00
                  nullable: true
                  type: string
                used:
                  description: The number of bytes that you've already uploaded against your quota in the current period.
                  example: 5368704120
                  nullable: true
                  type: number
              required:
                - free
                - max
                - reset_date
                - used
              type: object
            space:
              description: Information about the user's upload space remaining for the current period.
              properties:
                free:
                  description: The number of bytes remaining in your upload quota.
                  example: 5000000
                  type: number
                max:
                  description: The maximum number of bytes allotted to your upload quota.
                  example: 5368709120
                  nullable: true
                  type: number
                showing:
                  description: Whether the values of the upload_quota.space fields are for the lifetime quota or the periodic quota.
                  enum:
                    - lifetime
                    - periodic
                  example: lifetime
                  type: string
                used:
                  description: The number of bytes that you've already uploaded against your quota.
                  example: 5368704120
                  type: number
              required:
                - free
                - max
                - showing
                - used
              type: object
          required:
            - lifetime
            - periodic
            - space
          type: object
        uri:
          description: The user's canonical relative URI.
          example: /users/152184
          type: string
        websites:
          description: The user's websites.
          items:
            properties:
              type: # added
                type: string
                nullable: true
              uri:  # added
                type: string
                nullable: true
              description:
                description: The website's description.
                example: Follow us on Twitter!
                nullable: true
                type: string
              link:
                description: The URL of the website.
                example: https://twitter.com/vimeo
                type: string
              name:
                description: The name of the website.
                example: Twitter
                nullable: true
                type: string
            required:
              - description
              - link
              - name
            type: object
          type: array
#      required:
#        - account
#        - bio
#        - created_time
#        - link
#        - location
#        - metadata
#        - name
#        - pictures
#        - resource_key
#        - upload_quota
#        - uri
#        - websites
      title: User
      type: object
    video:
      properties:
        edit_session: # added
          type: object
          properties:
            is_music_licensed:
              type: boolean
              nullable: true
            is_max_resolution:
              type: boolean
              nullable: true
            has_watermark:
              type: boolean
              nullable: true
            is_rated:
              type: boolean
              nullable: true
            is_edited_by_tve:
              type: boolean
              nullable: true
            vsid:
              type: integer
              nullable: true
            result_video_hash:
              type: string
              nullable: true
            status:
              type: string
              nullable: true
            min_tier_for_movie:
              type: string
              nullable: true
        app: # added
          nullable: true # added
          type: object
          properties:
            name:
              description: The name of the API app.
              example: Vimeo Android
              type: string
              nullable: true
            uri:
              description: The canonical URI of the API app.
              example: /apps/12345
              type: string
              nullable: true
        content_rating_class: # added
          type: string
          nullable: true
        has_audio: # added
          type: boolean
          nullable: true
        is_playable: # added
          type: boolean
          nullable: true
        play: # added
          $ref: "#/components/schemas/play"
          description: The Play representation.
        player_embed_url: # added
          type: string
          nullable: true
        vod:  # added
          type: object
          nullable: true
          properties:
            id:
              type: integer
              nullable: true
        type: # added
          type: string
          nullable: true
        rating_mod_locked: # added
          type: boolean
          nullable: true
        uploader: # added
          type: object
          properties:
            pictures:
              $ref: "#/components/schemas/picture"
        categories:
          description: The categories to which this video belongs.
          items:
            $ref: "#/components/schemas/category"
          type: array
        content_rating:
          description: The content ratings of this video.
          items:
            type: string
          type: array
        context:
          description: The context of the video's subscription, if this video is part of a subscription.
          properties:
            action:
              description: |
                The contextual action:

                Option descriptions:
                 * `Added to` - An Added To action.
                 * `Appearance by` - An Appearance By action.
                 * `Liked by` - A Liked By action.
                 * `Uploaded by` - An Unloaded By action.
              enum:
                - Added to
                - Appearance by
                - Liked by
                - Uploaded by
              example: Added to
              type: string
            resource:
              description: "The contextual resource: a user, group, or channel representation, or an object of a tag."
              nullable: true
              type: object
            resource_type:
              description: The contextual resource type.
              example: clip
              type: string
          required:
            - action
            - resource
            - resource_type
          type: object
        created_time:
          description: The time in ISO 8601 format when the video was created.
          example: 2018-03-05T21:04:47+00:00
          type: string
        description:
          description: A brief explanation of the video's content.
          example: A celebration of 10 years of Staff Picks.
          nullable: true
          type: string
        duration:
          description: The video's duration in seconds.
          example: 81
          type: number
        embed:
          $ref: "#/components/schemas/embed-settings"
#          allOf:
#            - $ref: "#/components/schemas/embed-settings"
          description: Information about embedding this video.
        height:
          description: The video's height in pixels.
          example: 1080
          type: number
        language:
          description: The video's primary language.
          example: en-US
          nullable: true
          type: string
        last_user_action_event_date:
          description: The time in ISO 8601 format when the user last modified the video.
          example: 2018-03-21T23:08:22+00:00
          nullable: true
          type: string
        license:
          description: |
            The [Creative Commons](http://creativecommons.org/licenses/) license used for the video:

            Option descriptions:
             * `by` - Attribution
             * `by-nc` - Attribution Non-Commercial
             * `by-nc-nd` - Attribution Non-Commercial No Derivatives
             * `by-nc-sa` - Attribution Non-Commercial Share Alike
             * `by-nd` - Attribution No Derivatives
             * `by-sa` - Attribution Share Alike
             * `cc0` - Public Domain Dedication
          enum:
            - by
            - by-nc
            - by-nc-nd
            - by-nc-sa
            - by-nd
            - by-sa
            - cc0
          example: by
          type: string
          nullable: true # added
        link:
          description: The link to the video.
          example: https://vimeo.com/258684937
          type: string
        metadata:
          description: The video's metadata.
          properties:
            is_screen_record: # added
              type: boolean
              nullable: true
            is_vimeo_create:  # added
              type: boolean
              nullable: true
            connections:
              description: A list of resource URIs related to the video.
              properties:
                comments:
                  description: Information about the comments on this video.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of comments on this connection.
                      example: 14
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937/comments
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
                credits:
                  description: Information about the users credited in this video.
                  nullable: true
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of users on this connection.
                      example: 4
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937/credits
                      type: string
                  type: object
                likes:
                  description: Information about the users who have liked this video.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of likes on this connection.
                      example: 230
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937/likes
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
                ondemand:
                  description: Information about this video's ondemand data.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    resource_key:
                      description: The On Demand connection resource key.
                      example: bac1033deba2310ebba2caec33c23e4beea67aba
                      type: string
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /ondemand/pages/61326
                      type: string
                  required:
                    - options
                    - resource_key
                    - uri
                  type: object
                pictures:
                  description: Information about this video's thumbnails.
                  properties:
                    options:
                      description: An array of HTTP methods allowed on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: Total number of thumbnails on this connection.
                      example: 1
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937/pictures
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
#                playback:    # Not present in the official docs
#                  description: The DRM playback status connection for this video.
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      example: /videos/258684937/playback
#                      type: string
#                  required:
#                    - options
#                    - uri
#                  type: object
                recommendations:
                  description: The recommendations for this video.
                  nullable: true
                  properties:
                    options:
                      description: An array of HTTP methods allowed on this URI.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937/recommendations
                      type: string
                  type: object
                related:
                  description: Related content for this video.
                  nullable: true
                  properties:
                    options:
                      description: An array of HTTP methods allowed on this URI.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937?offset=10
                      type: string
                  type: object
                season:
                  description: Information about the video's season.
                  properties:
                    name:
                      description: The name of this season.
                      example: Season 1
                      type: string
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /ondemand/pages/61326/season/12345
                      type: string
                  required:
                    - name
                    - options
                    - uri
                  type: object
                texttracks:
                  description: Information about this video's text tracks.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of text tracks on this connection.
                      example: 2
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937/texttracks
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
                trailer:
                  description: Information about this video's VOD trailer.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    resource_key:
                      description: The trailer connection resource key.
                      example: bac1033deba2310ebba2caec33c23e4beea67aba
                      type: string
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /ondemand/pages/61326/videos/12345
                      type: string
                  required:
                    - options
                    - resource_key
                    - uri
                  type: object
#                users_with_access: # private_token
#                  description: Information about the user privacy of this video, if the video privacy is `users`.
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    total:
#                      description: The total number of users on this connection.
#                      example: 8
#                      type: number
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      example: /videos/258684937/privacy/users
#                      type: string
#                  required:
#                    - options
#                    - total
#                    - uri
#                  type: object
                versions:
                  description: Information about the versions of this video.
                  properties:
                    current_uri:
                      description: The URI of the current version of the video.
                      example: /videos/258684937/versions/12345
                      type: string
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of versions on this connection.
                      example: 3
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937/versions
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - comments
                - credits
                - likes
#                - ondemand
                - pictures
#                - playback
                - recommendations
                - related
#                - season
                - texttracks
#                - trailer
#                - users_with_access
#                - versions
              type: object
            interactions:
              description: A list of resource URIs related to the video.
              properties:
                buy: # private_token, otherwise null
                  description: The Buy interaction for a On Demand video.
                  nullable: true
                  properties:
                    currency:
                      description: The currency code for the current user's region.
                      example: USD
                      nullable: true
                      type: string
                    display_price:
                      description: Formatted price to display to buy an On Demand video.
                      example: "5.99"
                      nullable: true
                      type: string
                    download:
                      description: |
                        The user's download access to this On Demand video:

                        Option descriptions:
                         * `available` - The video is available for download.
                         * `purchased` - The user has purchased the video.
                         * `restricted` - The user isn't permitted to download the video.
                         * `unavailable` - The video isn't available for download.
                      enum:
                        - available
                        - purchased
                        - restricted
                        - unavailable
                      example: available
                      type: string
                    drm:
                      description: Whether the video has DRM.
                      example: "true"
                      type: boolean
                    link:
                      description: The URL to buy the On Demand video on Vimeo.
                      example: https://vimeo.com/ondemand/darbyforever
                      nullable: true
                      type: string
                    price:
                      description: The numeric value of the price for buying the On Demand video.
                      example: 5.99
                      nullable: true
                      type: number
                    purchase_time:
                      description: The time in ISO 8601 format when the On Demand video was purchased.
                      example: 2018-03-05T21:04:47+00:00
                      nullable: true
                      type: string
                    stream:
                      description: |
                        The user's streaming access to this On Demand video:

                        Option descriptions:
                         * `available` - The video is available for streaming.
                         * `purchased` - The user has purchased the video.
                         * `restricted` - The user isn't permitted to stream the video.
                         * `unavailable` - The video isn't available for streaming
                      enum:
                        - available
                        - purchased
                        - restricted
                        - unavailable
                      example: available
                      type: string
                    uri:
                      description: The product URI to purchase the On Demand video.
                      example: /ondemand/pages/61326/products/12345
                      nullable: true
                      type: string
                  required:
                    - currency
                    - display_price
                    - download
                    - drm
                    - link
                    - price
                    - purchase_time
                    - stream
                    - uri
                  type: object
#                channel:   # private_token
#                  description: When a video is referenced by a channel URI, if the user is a moderator of the channel, include information about removing the video from the channel.
#                  nullable: true
#                  properties:
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      type: string
#                  required:
#                    - options
#                    - uri
#                  type: object
#                like:  # private_token
#                  description: Information about whether the authenticated user has liked this video.
#                  properties:
#                    added:
#                      description: Whether the user has liked the video.
#                      example: "true"
#                      type: boolean
#                    added_time:
#                      description: The time in ISO 8601 format when the user liked the video.
#                      type: string
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      type: string
#                  required:
#                    - added
#                    - added_time
#                    - options
#                    - uri
#                  type: object
                rent: # private_token, otherwise null
                  description: The Rent interaction for an On Demand video.
                  nullable: true
                  properties:
                    currency:
                      description: The currency code for the current user's region.
                      example: USD
                      nullable: true
                      type: string
                    display_price:
                      description: Formatted price to display to rent an On Demand video.
                      example: "5.99"
                      nullable: true
                      type: string
                    drm:
                      description: Whether the video has DRM.
                      example: "true"
                      type: boolean
                    expires_time:
                      description: The time in ISO 8601 format when the rental period for the video expires.
                      example: 2018-03-05T21:04:47+00:00
                      nullable: true
                      type: string
                    link:
                      description: The URL to rent the On Demand video on Vimeo.
                      example: https://vimeo.com/ondemand/darbyforever
                      nullable: true
                      type: string
                    price:
                      description: The numeric value of the price for buying the On Demand video.
                      example: 5.99
                      nullable: true
                      type: number
                    purchase_time:
                      description: The time in ISO 8601 format when the On Demand video was rented.
                      example: 2018-09-16T09:02:40+00:00
                      nullable: true
                      type: string
                    stream:
                      description: |
                        The user's streaming access to this On Demand video:

                        Option descriptions:
                         * `available` - The video is available for streaming.
                         * `purchased` - The user has purchased the video.
                         * `restricted` - The user isn't permitted to stream the video.
                         * `unavailable` - The video isn't available for streaming.
                      enum:
                        - available
                        - purchased
                        - restricted
                        - unavailable
                      example: available
                      type: string
                    uri:
                      description: The product URI to rent the On Demand video.
                      example: /ondemand/pages/61326/products/12345
                      nullable: true
                      type: string
                  required:
                    - currency
                    - display_price
                    - drm
                    - expires_time
                    - link
                    - price
                    - purchase_time
                    - stream
                    - uri
                  type: object
                report:
                  description: Information about where and how to report a video.
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    reason:
                      description: A list of valid reasons for reporting a video.
                      items:
                        type: string
                      type: array
                    uri:
                      description: The API URI that resolves to the connection data.
                      type: string
                  required:
                    - options
                    - reason
                    - uri
                  type: object
                subscribe:  # private_token, otherwise null
                  description: Subscription information for an On Demand video.
                  nullable: true
                  properties:
                    drm:
                      description: Whether the video has DRM.
                      example: "true"
                      type: boolean
                    expires_time:
                      description: The time in ISO 8601 format when the subscription expires.
                      example: 2018-03-05T21:04:47+00:00
                      type: string
                    purchase_time:
                      description: The tine in ISO 8601 format when the subscription was purchased.
                      example: 2018-03-02T21:04:47+00:00
                      type: string
                    stream:
                      description: The stream type.
                      example: purchased
                      type: string
                  type: object
#                watched: # private_token
#                  description: Information about removing this video from the user's list of watched videos.
#                  properties:
#                    added:
#                      description: Whether the user has watched the video.
#                      example: "true"
#                      type: boolean
#                    added_time:
#                      description: The time in ISO 8601 format when the user watched the video.
#                      type: string
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      type: string
#                  required:
#                    - added
#                    - added_time
#                    - options
#                    - uri
#                  type: object
#                watchlater:  # private_token
#                  description: Information about whether this video appears on the authenticated user's Watch Later list.
#                  properties:
#                    added:
#                      description: Whether the user has added the video to their Watch later list.
#                      example: "true"
#                      type: boolean
#                    added_time:
#                      description: The time in ISO 8601 format when the user added the video to their Watch Later list.
#                      type: string
#                    options:
#                      description: An array of HTTP methods permitted on this URI.
#                      items:
#                        type: string
#                      type: array
#                    uri:
#                      description: The API URI that resolves to the connection data.
#                      type: string
#                  required:
#                    - added
#                    - added_time
#                    - options
#                    - uri
#                  type: object
              required:
#                - buy
#                - channel
#                - like
#                - rent
                - report
#                - watched
#                - watchlater
              type: object
          required:
            - connections
            - interactions
          type: object
        modified_time:
          description: The time in ISO 8601 format when the video metadata was last modified.
          example: 2018-09-16T09:02:40+00:00
          type: string
        name:
          description: The video's title.
          example: Celebrating 10 Years of Staff Picks
          type: string
#        parent_folder: private_token
#          allOf:
#            - $ref: "#/components/schemas/project"
#          description: Information about the folder that contains this video.
#          nullable: true
        password:
          description: The privacy-enabled password to watch this video. Only users can see their own video passwords. This data requires a bearer token with the `private` scope.
          example: hunter1
          type: string
        pictures:
          $ref: "#/components/schemas/picture"
#          allOf:
#            - $ref: "#/components/schemas/picture"
          description: The active picture for this video.
        privacy:
          description: The video's privacy setting.
          properties:
            add:
              description: Whether the video can be added to collections.
              example: "true"
              type: boolean
            comments:
              description: |
                Who can comment on the video:

                Option descriptions:
                 * `anybody` - Anyone can comment on the video.
                 * `contacts` - Only contacts can comment on the video.
                 * `nobody` - No one can comment on the video.
              enum:
                - anybody
                - contacts
                - nobody
              example: anybody
              type: string
            download:
              description: The video's download permission setting.
              example: "true"
              type: boolean
            embed:
              description: |
                The video's embed permission setting:

                Option descriptions:
                 * `private` - The video is private.
                 * `public` - Anyone can embed the video.
                 * `public` -
              enum:
                - private
                - public
                - whitelist # added
              example: private
              type: string
            view:
              description: |
                The general privacy setting for the video:

                Option descriptions:
                 * `anybody` - Anyone can view the video.
                 * `contacts` - Only contacts can view the video.
                 * `disable` - Hide from vimeo
                 * `nobody` - No one besides the owner can view the video.
                 * `password` - Anyone with the video's password can view the video.
                 * `unlisted` - Not searchable from vimeo.com
                 * `users` - Only people with a Vimeo account can view the video.
                 * `ptv`
              enum:
                - anybody
                - contacts
                - disable
                - nobody
                - password
                - unlisted
                - users
                - ptv
              example: anybody
              type: string
          required:
            - add
            - comments
            - download
            - embed
            - view
          type: object
        release_time:
          description: The time in ISO 8601 format when the video was released.
          example: 2018-03-05T21:04:47+00:00
          type: string
        resource_key:
          description: The resource key string of the video.
          example: bac1033deba2310ebba2caec33c23e4beea67aba
          type: string
        spatial:
          description: 360 spatial data.
          properties:
            director_timeline:
              description: 360 director timeline.
              items:
                properties:
                  pitch:
                    description: The director timeline pitch, from -90 (minimum) to 90 (maximum).
                    example: 70
                    type: number
                  roll:
                    description: The director timeline roll.
                    example: 0
                    type: number
                  time_code:
                    description: The director timeline time code.
                    example: 300
                    type: number
                  yaw:
                    description: The director timeline yaw, from 0 (minimum) to 360 (maximum).
                    example: 125
                    type: number
                type: object
              type: array
            field_of_view:
              description: The 360 field of view, from 30 (minimum) to 90 (maximum). The default is 50.
              example: 50
              nullable: true
              type: number
            projection:
              description: |
                The 360 spatial projection:

                Option descriptions:
                 * `cubical` - The spatial projection is cubical.
                 * `cylindrical` - The spatial projection is cylindrical.
                 * `dome` - The spatial projection is dome-shaped.
                 * `equirectangular` - The spatial projection is equirectangular.
                 * `pyramid` - The spatial projection is pyramid-shaped.
              enum:
                - cubical
                - cylindrical
                - dome
                - equirectangular
                - pyramid
              example: cubical
              nullable: true
              type: string
            stereo_format:
              description: |
                The 360 stereo format:

                Option descriptions:
                 * `left-right` - The stereo format is left-right.
                 * `mono` - The audio is monaural.
                 * `top-bottom` - The stereo format is top-bottom.
              enum:
                - left-right
                - mono
                - top-bottom
              example: left-right
              nullable: true
              type: string
          required:
            - director_timeline
            - field_of_view
            - projection
            - stereo_format
          type: object
        stats:
          description: A collection of stats associated with this video.
          properties:
            plays:
              description: The current total number of times that the video has been played.
              example: 20
              nullable: true
              type: number
          required:
            - plays
          type: object
        status:
          description: |
            The status code for the availability of the video. This field is deprecated in favor of `upload` and `transcode`.

            Option descriptions:
             * `available` - The video is available.
             * `quota_exceeded` - The user's quota is exceeded with this video.
             * `total_cap_exceeded` - The user has exceeded their total cap with this video.
             * `transcode_starting` - Transcoding is beginning for the video.
             * `transcoding` - Transcoding is underway for the video.
             * `transcoding_error` - There was an error in transcoding the video.
             * `unavailable` - The video is unavailable.
             * `uploading` - The video is being uploaded.
             * `uploading_error` - There was an error in uploading the video.
          enum:
            - available
            - quota_exceeded
            - total_cap_exceeded
            - transcode_starting
            - transcoding
            - transcoding_error
            - unavailable
            - uploading
            - uploading_error
          example: available
          nullable: true
          type: string
        tags:
          description: An array of all tags assigned to this video.
          items:
            $ref: "#/components/schemas/tag"
          type: array
        transcode:
          description: The transcode information for a video upload.
          nullable: true
          properties:
            status:
              description: Status code for this video's availability.
              enum:
                - complete
                - error
                - in_progress
              example: complete
              type: string
          type: object
        upload:
          description: The upload information for this video.
          nullable: true
          properties:
            approach:
              description: The approach for uploading the video.
              enum:
                - post
                - pull
                - streaming
                - tus
              example: post
              type: string
            complete_uri:
              description: The URI for completing the upload.
              type: string
            form:
              description: The HTML form for uploading a video through the post approach.
              type: string
            link:
              description: The link of the video to capture through the pull approach.
              type: string
            redirect_url:
              description: The redirect URL for the upload app.
              type: string
            size:
              description: The file size in bytes of the uploaded video.
              example: 60000
              type: number
            status:
              description: |
                The status code for the availability of the uploaded video:

                Option descriptions:
                 * `complete` - The upload is complete.
                 * `error` - The upload ended with an error.
                 * `in_progress` - The upload is underway.
              enum:
                - complete
                - error
                - in_progress
              example: complete
              type: string
            upload_link:
              description: The link for sending video file data.
              type: string
          required:
            - status
          type: object
        uri:
          description: The video's canonical relative URI.
          example: /videos/258684937
          type: string
        user:
          $ref: "#/components/schemas/user"
#          allOf:
#            - $ref: "#/components/schemas/user"
          description: The video owner.
          nullable: true
        width:
          description: The video's width in pixels.
          example: 1920
          type: number
      required:
        - categories
        - content_rating
#        - context
        - created_time
        - description
        - duration
        - embed
        - height
        - language
        - license
        - link
        - metadata
        - modified_time
        - name
        - pictures
        - privacy
        - release_time
        - resource_key
#        - spatial
        - stats
        - status
        - tags
        - transcode
        - upload
        - uri
        - user
        - width
      title: Video
      type: object
    video-versions:
      properties:
        active:
          description: Whether this video version is the currently active one.
          example: "true"
          type: boolean
        app:
          allOf:
            - $ref: "#/components/schemas/api-app"
          description: The API app associated with the video version.
        created_time:
          description: The time in ISO 8601 for when the video version was created.
          example: 2018-03-05T21:04:47+00:00
          type: string
        duration:
          description: The duration of the video version in seconds.
          example: 81
          nullable: true
          type: number
        filename:
          description: The file name of the video version.
          example: rev2.mp4
          type: string
        filesize:
          description: The size in byes of the video version file.
          example: 4025322521
          nullable: true
          type: number
        metadata:
          description: The video version's metadata.
          properties:
            connections:
              properties:
                video:
                  description: Data from video associated with version
                  properties:
                    options:
                      description: An array of HTTP methods permitted on this URI.
                      items:
                        type: string
                      type: array
                    total:
                      description: The total number of videos on this connection.
                      example: 5
                      type: number
                    uri:
                      description: The API URI that resolves to the connection data.
                      example: /videos/258684937
                      type: string
                  required:
                    - options
                    - total
                    - uri
                  type: object
              required:
                - video
              type: object
          required:
            - connections
          type: object
        modified_time:
          description: The time in ISO 8601 format when the video version was last modified.
          example: 2018-09-16T09:02:40+00:00
          type: string
        play:
          allOf:
            - $ref: "#/components/schemas/play"
          description: The Play representation.
        upload:
          description: The upload information for this version.
          nullable: true
          properties:
            approach:
              description: The approach for uploading the video.
              enum:
                - post
                - pull
                - streaming
                - tus
              example: post
              type: string
            complete_uri:
              description: The URI for completing the upload.
              type: string
            form:
              description: The HTML form for uploading a video through the post approach.
              type: string
            link:
              description: The link of the video to capture through the pull approach.
              type: string
            redirect_url:
              description: The redirect URL for the upload app.
              type: string
            size:
              description: The file size in bytes of the uploaded video.
              example: 60000
              type: number
            status:
              description: |
                The status code for the availability of the uploaded video:

                Option descriptions:
                 * `complete` - The upload is complete.
                 * `error` - The upload ended with an error.
                 * `in_progress` - The upload is underway.
              enum:
                - complete
                - error
                - in_progress
              example: complete
              type: string
            upload_link:
              description: The link for sending video file data.
              type: string
          required:
            - status
          type: object
        upload_date:
          description: The time in ISO 8601 format when the video version was uploaded.
          example: 2018-09-16T09:02:40+00:00
          nullable: true
          type: string
        uri:
          description: The version's canonical relative URI.
          example: /videos/258684937/versions/12345
          type: string
        user:
          allOf:
            - $ref: "#/components/schemas/user"
          description: The owner of the video version.
          nullable: true
      required:
        - active
        - app
        - created_time
        - duration
        - filename
        - filesize
        - metadata
        - modified_time
        - play
        - upload
        - upload_date
        - uri
        - user
      title: Video Versions
      type: object
  securitySchemes:
    bearer:
      bearerFormat: bearer
      scheme: bearer
      type: http
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          scopes:
            create: Create new albums, channels, and so on
            delete: Delete videos, albums, channels, and so on
            edit: Edit existing videos, albums, channels, and so on
            email: Access to email addresses
            interact: Interact with Vimeo resources on a member's behalf, such as liking a video or following another member
            private: Access private member data
            promo_codes: Add, remove, and review Vimeo On Demand promotions
            public: Access public member data
            purchase: Purchase content
            purchased: Access a member's Vimeo On Demand purchase history
            stats: Access video stats
            upload: Upload videos
            video_files: Access video files belonging to members with a PRO subscription or higher
          tokenUrl: /oauth/access_token
        clientCredentials:
          scopes:
            create: Create new albums, channels, and so on
            delete: Delete videos, albums, channels, and so on
            edit: Edit existing videos, albums, channels, and so on
            email: Access to email addresses
            interact: Interact with Vimeo resources on a member's behalf, such as liking a video or following another member
            private: Access private member data
            promo_codes: Add, remove, and review Vimeo On Demand promotions
            public: Access public member data
            purchase: Purchase content
            purchased: Access a member's Vimeo On Demand purchase history
            stats: Access video stats
            upload: Upload videos
            video_files: Access video files belonging to members with a PRO subscription or higher
          tokenUrl: /oauth/authorize/client
      type: oauth2
